#!/usr/bin/perl -w
# Dieses Script (problectix-pictures) wurde von Rüdiger Beck erstellt
# Es ist freie Software
# Bei Fehlern wenden Sie sich bitte an mich.
# jeffbeck@web.de  oder  jeffbeck@gmx.de

# Bibliotheken
use File::Find;
use Getopt::Long;
Getopt::Long::Configure ("bundling");

my $bilder_anzahl=0;
my $bilder_soll_anzahl=0;
my $bilder_zeile_anzahl=0;
my $bilder_seite_anzahl=0;

my $info=0;
my $help=0;
my $dir="";

# headers and footers
my $lhead="";
#my $chead="\\texttt{--chead Header}";
my $chead="";
my $rhead="";
my $lfoot="";
my $cfoot="";
my $rfoot="";

my $ppp=8;


# Parsen der Optionen
my $testopt=GetOptions(
           "info|i" => \$info,
           "help|h" => \$help,
           "dir|d=s" => \$dir,
           "ppp|p=s" => \$ppp,
           "lhead=s" => \$lhead,
           "chead=s" => \$chead,
           "rhead=s" => \$rhead,
           "lfoot=s" => \$lfoot,
           "cfoot=s" => \$cfoot,
           "rfoot=s" => \$rfoot,
          );

# Prüfen, ob Optionen erkannt wurden, sonst Abbruch
&check_options($testopt);

if (not defined $dir or $dir eq""){
    print "To specify a directory use: problctix-pictures -d directory \n";
    exit;
}

# in das angegebene Verzeiichnis wechseln
chdir "$dir" || 
   die "Kann nicht nach $dir wechseln";

# Abbruch bei falschen Werten fuer ppp
if ($ppp!=1 and $ppp!=2 and $ppp!=4 and $ppp!=8){
    print "Option --ppp takes only the values 1,2,4 or 8\n";
    exit;
}

# Liste mit *.jpg-Dateien erzeugen
open(PICTURESLIST, ">${dir}/problectix-pictures.list");
find(\&pictures_finden, $dir);
close(PICTURESLIST);


# Datei öffnen, in die der *.tex-code geschrieben wird.
&open_out_file($ppp);
#open(PICTURES, ">${dir}/problectix-pictures.tex");

# *.tex-Vorspann erzeugen
&tex_preamble($ppp,$lhead,$chead,$rhead,$lfoot,$cfoot,$rfoot);

# landscape-modus einschalten, falls notwendig
if($ppp==4) {
   print PICTURES ('\begin{landscape}',"\n");
}


open(PICTURESLIST, "${dir}/problectix-pictures.list");
while(<PICTURESLIST>){
# Bildereintrag machen. 
# Todo: evtl mehrfach, wenn Anzahl größer 1
    $bilder_anzahl=$bilder_anzahl+1;
    $bilder_zeile_anzahl=$bilder_zeile_anzahl+1;
    $bilder_seite_anzahl=$bilder_seite_anzahl+1;
    chomp();

    if ($ppp==8){
       # 8 Pictures per Page, portrait
       ($bild, $bilder_soll_anzahl)=split(/;/);
       print PICTURES ('\includegraphics[width=82mm]{',"$bild",'}',"\n");
       print PICTURES ('\rotatebox{90}{', "$bild",' \qquad Bild ',
                       "$bilder_anzahl", '}',"\n");
       print PICTURES ('\hspace{4.5mm}',"\n");
       # immer wenn 2 Bilder eingefügt sind, vertikaler Abstand einfügen
       if ($bilder_zeile_anzahl==2){
          print PICTURES ("\n",'\vspace*{1mm}',"\n\n");
          $bilder_zeile_anzahl=0;
       }
       # immer wenn 8 Bilder eingefügt sind, neue Seite beginnen
       if ($bilder_seite_anzahl==8){
          print PICTURES ("\n",'\newpage',"\n\n");
          $bilder_seite_anzahl=0;
       }
    } elsif($ppp==4) {
       # 4 Pictures per Page, landscape
       ($bild, $bilder_soll_anzahl)=split(/;/);
       print PICTURES ('\includegraphics[width=120mm]{',"$bild",'}',"\n");
       print PICTURES ('\rotatebox{90}{', "$bild",' \qquad Bild ',
                       "$bilder_anzahl", '}',"\n");
       print PICTURES ('\hspace{4.5mm}',"\n");
       # immer wenn 2 Bilder eingefügt sind, vertikaler Abstand einfügen
       if ($bilder_zeile_anzahl==2){
          print PICTURES ("\n",'\vspace*{0mm}',"\n\n");
          $bilder_zeile_anzahl=0;
       }
       # immer wenn 4 Bilder eingefügt sind, neue Seite beginnen
       if ($bilder_seite_anzahl==4){
          print PICTURES ("\n",'\newpage',"\n\n");
          $bilder_seite_anzahl=0;
       }
    } elsif($ppp==2) {
       # 2 Pictures per Page, portrait
       ($bild, $bilder_soll_anzahl)=split(/;/);
       print PICTURES ('\includegraphics[width=165mm]{',"$bild",'}',"\n");
       print PICTURES ('\rotatebox{90}{', "$bild",' \qquad Bild ',
                       "$bilder_anzahl", '}',"\n");
       print PICTURES ('\newline',"\n");
#          print PICTURES ("\n",'\vspace{0mm}',"\n\n");
          print PICTURES ("\n",'\vfill',"\n\n");
          $bilder_zeile_anzahl=0;
       # immer wenn 2 Bilder eingefügt sind, neue Seite beginnen
       if ($bilder_seite_anzahl==2){
          print PICTURES ("\n",'\newpage',"\n\n");
          $bilder_seite_anzahl=0;
       }
   } elsif($ppp==1) {       
       ($bild, $bilder_soll_anzahl)=split(/;/);
       my ($epsname)=split(/\./,$bild);
       $epsname = $epsname.".eps";
       if (not -e "$epsname"){
          print "Converting $bild to $epsname ...";
          system("convert ${bild} eps:${epsname}");
          print "   done\n";
      } else {
          print "$epsname exists, no conversion necessary\n";
      }
       print PICTURES "\\begin{slide}[box]{\\tiny $bild}\n";
       print PICTURES " \\begin{picture}(0,0)\n";
       print PICTURES ('  \put(-20,-280){\includegraphics[width=205mm]{',
                       "$epsname",'}}',"\n");
       print PICTURES " \\end{picture}\n";
       print PICTURES "\\end{slide}\n";

   }
}






# *.tex-Nachspann erzeugen
if($ppp==4) {
   print PICTURES ('\end{landscape}',"\n");
}

print PICTURES ('
\end{document}
');



# Das ganze pdflatexen
if ($ppp==1){
   # presentation
   system("latex  ${dir}/problectix-pictures-${ppp}ppp.tex");
   system("dvips  ${dir}/problectix-pictures-${ppp}ppp.dvi");
   system("ps2pdf  ${dir}/problectix-pictures-${ppp}ppp.ps");
   # Mit viewer öffnen
   system("xpdf  ${dir}/problectix-pictures-${ppp}ppp.pdf");
} else {
   system("pdflatex  ${dir}/problectix-pictures-${ppp}ppp.tex");
   # Mit viewer öffnen
   system("xpdf  ${dir}/problectix-pictures-${ppp}ppp.pdf");
}


close(PICTURES);
close(PICTURESLIST);



#============================================================
# sub
#============================================================

sub pictures_finden {
# Verarbeitung
    if (m/.jpg$/){
    # alle Bilder konvertieren von der Digitalkamera
    # find a way to NOT convert the olympus-pictures
    #system("convert ${_} jpg:${_}");
    
    print PICTURESLIST "$_",";1;\n" ;
    #print PICTURESLIST ("$_",";1;\n");
    }
}



sub  check_options{
   my ($parse_ergebnis) = @_;
   if (not $parse_ergebnis==1){
      my @list = split(/\//,$0);
      my $scriptname = pop @list;
      print "\nSie haben bei der Eingabe der Optionen einen Fehler begangen.\n"; 
      print "Siehe Fehlermeldung weiter oben. \n\n";
      print "... $scriptname beendet sich.\n\n";
      exit;
   } else {
         print "Alle Befehls-Optionen wurden erkannt.\n\n";
   }

}


sub open_out_file {
    my ($ppp) = @_;
    my $filename = "${dir}/problectix-pictures-${ppp}ppp.tex";
    open(PICTURES, ">$filename");
}

sub tex_presentation_preamble {

}

sub tex_preamble {
    my ($ppp,$lhead,$chead,$rhead,$lfoot,$cfoot,$rfoot)=@_;
    if ($ppp==2 or $ppp==4 or $ppp==8){
       print PICTURES ('
%%Diese Datei wurde mit problectix-pictures erzeugt
\documentclass{article}
\usepackage{graphicx}
\usepackage{lscape}
\usepackage{fancyhdr}
%% Seiteneinstellungen
\setlength{\voffset}{-25.4mm}
\setlength{\hoffset}{-25.4mm}
\setlength{\headheight}{8mm}%
\setlength{\headsep}{2mm}
\setlength{\footskip}{1mm}%%
\setlength{\textwidth}{180mm}
%%\setlength{\textheight}{270mm}
\setlength{\topmargin}{2mm}
\setlength{\oddsidemargin}{17mm}%
\setlength{\evensidemargin}{17mm}%
\setlength{\parindent}{0mm}%

');
   } elsif ($ppp==1){
       print PICTURES ('
%%Diese Datei wurde mit problectix-pictures erzeugt
\documentclass[pdf]{prosper}

\title{Testing}
\author{problectix}
')



   }



   if($ppp==8) {
      print PICTURES ('\setlength{\textheight}{256mm}',"\n");
      print PICTURES ('\setlength{\textwidth}{190mm}',"\n");
      print PICTURES ('\setlength{\footskip}{0mm}%%',"\n");
   } elsif($ppp==4) {
      print PICTURES ('\setlength{\textheight}{255mm}',"\n");
      print PICTURES ('\setlength{\textwidth}{190mm}',"\n");
      print PICTURES ('\setlength{\footskip}{8mm}%%',"\n");
   } elsif($ppp==2) {
      print PICTURES ('\setlength{\textheight}{257mm}',"\n");
      print PICTURES ('\setlength{\footskip}{0mm}%%',"\n");
   } elsif($ppp==1) {
       print PICTURES ('\setlength{\textwidth}{257mm}',"\n");
#      print PICTURES ('\setlength{\textheight}{257mm}',"\n");
#      print PICTURES ('\setlength{\footskip}{0mm}%%',"\n");
   }


    if ($ppp==2 or $ppp==4 or $ppp==8){
      print PICTURES ('
\pagestyle{fancy}
      ');

      print PICTURES "\\lhead{$lhead}\n";
      print PICTURES "\\chead{$chead}\n";
      print PICTURES "\\rhead{$rhead}\n";
      print PICTURES "\\lfoot{$lfoot}\n";
      print PICTURES "\\cfoot{$cfoot}\n";
      print PICTURES "\\rfoot{$rfoot}\n";
  }
      print PICTURES ('

\begin{document}

');

}
