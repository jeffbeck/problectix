#!/usr/bin/perl

# This script copies examples from the problectix package in the users 
# directory $HOME/problectix-test runs them through latex and dvips
#
# This is used to check if the all the formatting is still correct,
# i.e. after a change in the *.cls and *.dtx - files 

use Getopt::Long;
use problectix;

$home=$ENV{'HOME'};

$testdir="$home"."/problectix-test";

print "Homedir is $testdir \n";









# ===========================================================================
# Optionen verarbeiten
# ==========================================================================

# Variablen für Optionen
my $help=0;
my $option="";
my $fast=0;
my $file="";
my $noclean=0;

# Parsen der Optionen
my $testopt=GetOptions(
           "help|h" => \$help,
           "option|o=s" => \$option,
           "file=s" => \$file,
           "noclean" => \$noclean,
           "fast" => \$fast
          );


# Prüfen, ob Optionen erkannt wurden
&problectix::check_options($testopt);




# --help
if ($help==1) {
   # Scriptname ermitteln
   my @list = split(/\//,$0);
   my $scriptname = pop @list;
   # Befehlbeschreibung
   print "\n$scriptname performs a test for problectix. See the manpage for details. \n\n";
   print "Options: \n\n";
   print "--fast \n";
   print "      : Use only the file ohne.tex for the test.\n\n";
   print "--noclean \n";
   print "      : Don't delete *.tex, *.dvi, ...\n\n";
   print "--file file \n";
   print "      : Use only the file file.tex for the test.\n\n";
   print "--option Optionlist , -o Optionlist \n";
   print "      : Pass Optionlist to the documentclass.\n";
   print "        An Optionlist can contain a number of Options separated by a comma(,)\n";
    print "\n";
   exit;
}

# --option
if ($option ne "") {
   # Befehlbeschreibung
    print "Option $option wird übergeben an die dokumentklasse teacher\n";
}







# make sure, that problectix-test exists
if (-e "$testdir"){
    print "\n $testdir exists. Please delete it manually \n\n";
    exit;
} else {
    print "Creating $testdir \n"; 
    system("mkdir $testdir");   
}

# copy the examples
system("cp /usr/share/texmf/doc/latex/problectix/examples/aufgaben/* $testdir");


if ($fast==1){
   # use only one file for the test
   system("cp /usr/share/texmf/doc/latex/problectix/examples/test/ohne.tex $testdir");
  
   @filelist=("ohne");
   print "I use only the  file @filelist for the test\n";
} elsif ($file ne ""){
   # use only one file for the test
   if (-e "/usr/share/texmf/doc/latex/problectix/examples/test/$file.tex"){
    system("cp /usr/share/texmf/doc/latex/problectix/examples/test/$file.tex $testdir");
} else {
    print "\n File $file.tex not found in the system.\n\n";
    exit;
   }
   @filelist=($file);
} else {   # copy all the test-scripts
   system("cp /usr/share/texmf/doc/latex/problectix/examples/test/* $testdir");
   # All the *.tex-files in this list will be run through latex/dvips/pdflatex
   @filelist=(
           "ohne",
	   "schueler-ka",
	   "schueler-ka-notenliste",
	   "schueler-ka-notenliste-bszleo",
	   "schueler-kamulti",
	   "schueler-kamulti-notenliste",
	   "schueler-kamulti-notenliste-bszleo",
	   "schueler-kamulti-1.5",
	   "schueler-kamulti-0.8",
	   "lsg-bszleo",
	   "lsg",
	   "schueler-exam",
	   "schueler-exam-arial",
	   "schueler-arb",
	   "schueler-arb-bszleo",
	   "schueler-bszleoexam",
	   "schueler-bszleoexam-arial",
	   "notenliste",
	   "stoff",
	   );
}



# latex all the test-scripts 
foreach $file (@filelist) {
    # source verändern
    &change_source($file);
    # create *.ps
    $command="cd $testdir; latex $file.tex";
    print "latex: "."$command"."\n";
    system("$command");
    system("$command");
    $command2="cd $testdir; dvips $file.dvi";
    print "dvips: "."$command2"."\n";
    system("$command2");
    # create *.pdf   
    $command3="cd $testdir; pdflatex $file.tex";
    print "pdflatex: "."$command3"."\n";
    system("$command3");
    if ($noclean==0){
     # cleaning up
     $command4="cd $testdir; rm $file.aux; rm $file.log; rm $file.tex; rm $file.dvi;";
     print "Cleaning: "."$command4"."\n";
     system("$command4");
    }
}



# remove the aufgaben
    system("cd $testdir; rm aufgabe*");




# adding an option to the documentclass
sub change_source {
    my ($file) = @_;
    my $line;
    my $newline;
    print "Changing the file $file \n";
    open(IN, "$testdir/$file.tex");
    open(OUT, ">$testdir/$file-tmp.tex");
    while(<IN>){
       $line=$_;
       \chomp();
       if ($line =~m/documentclass\[(.*)\]{teacher}/) {
           # $1 are the 'options'
	   print "Options of \\documentclass:   $1   \n";
           
           $newline='\documentclass['."$1".",$option".']{teacher}';
	   print "   Oldline: ",$line;
	   print "   Newline: ",$newline, "\n";
           # ersetzen der Zeile
           $line=$newline;
       }
       print OUT $line,"\n";
    }
    close(IN);
    close(OUT);
    system("mv $testdir/$file-tmp.tex $testdir/$file.tex");
}
