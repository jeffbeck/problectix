\documentclass{ltxdoc}
\usepackage{ifthen}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{textcomp}
\usepackage{afterpage}
\usepackage{calc}
\usepackage[T1]{fontenc}
\usepackage[latin1]{inputenc}
\usepackage{ngerman}
\usepackage{fancybox} 
\usepackage{marvosym}
\usepackage[dvips]{color} 
\usepackage{fancyhdr}
\usepackage{moreverb}
\usepackage{twoopt}
%%\usepackage{teacherpack}
\usepackage{kapack}
\setlength{\parindent}{0mm}
\setlength{\parskip}{3mm}
\OnlyDescription
\begin{document}
%%\title{problectx}
%%\author{jeff}

\newpage

%%\begin{titlepage}

%%\end{titlepage}


\title{\textbf{\LaTeX{} für Lehrer} 
\linebreak
\linebreak
Aufgabensammlungen \linebreak
für Klassenarbeiten unter Unix/Linux \linebreak
und andere Hilfsmittel für Lehrer
\linebreak 
\linebreak \textbf{Prob}lem Col\textbf{lect}ion on Un\textbf{ix}
\linebreak (\texttt{problectix})
}

\author{Rüdiger Beck}
\maketitle
\newpage


\tableofcontents

\newpage

\part{Die Distribution --- \texttt{problectix}}

\section{Grundlagen von \texttt{problectix}}

\subsection{Was ist \texttt{problectix}?}

Das Debian-Paket |problectix| fasst alle notwendigen \LaTeX-Dateien,
PERL-scripte, ... zusammen, die benötigt werden, um unter dem
Betriebsystem Debian-GNU/Linux bzw. jedem anderen Unix/Linux als
Lehrer effektiv \LaTeX zu benutzen.

--- Ab hier muss der Text woanders hin ---

Jede Aufgabe wird incl. Lösung in einer Datei abgelegt. Alle diese
Dateien zusammen bilden die Aufgabensammlung. Soll nun eine
Klassenarbeit oder ein Aufgabenblatt erstellt werden, so wird eine
Klassenarbeitsdatei bzw. eine Aufgabenblattdatei erstellt, und die
gewünschten Aufgaben per Einfügebefehl, der den Dateinamen
enthält, eingebunden.

Um den Einfügebefehl der Aufgabe einfach zu ermitteln, können mit einem
PERL-script alle Aufgaben-Dateien unterhalb eines Verzeichnisbaums
incl. Lösungen in eine html-Seite umgewandelt werden. Dabei liegt die
Aufgabe als \texttt{*.png}-Bild vor, sowie als Über-/Unterschrift der
Einfügebefehl in markierbarer Textform. Der Einfügebefehl kann nun
einfach in einen Editor kopiert werden, mit dem die Klassenarbeitsdatei
bzw. die Aufgabenblattdatei erstellt wird.

In Zukunft:

Per Script kann eine Aufgabensammung aller Aufgaben erstellt werden
(für die Schüler). Da diese Aufgabensammlung ebenfalls in Bild/HTML
vorliegt, kann sie per Webserver durchsuchbar gemacht werden.

Da die Erstellten Aufgaben in \LaTeX-Code vorliegen, können Sie in
eine Versions-Verwaltungs-Software (CVS) gestellt werden, damit
Korrekturen Zentral gesammelt werden können und auch mehrere Personen
zugreifen können. Der Zugriff auf den CVS-Server kann aus der ganzen
Welt erfolgen.

Versionsinformationen von CVS können können im Dokument ausgegeben werden.

\subsection{Die Bestandteile von \texttt{problectix}}

|problectix| besteht aus den folgenden Bestandteilen:

\begin{itemize}
\item |teacher.cls| : Die Dokumentklasse |teacher| zum Erstellen von
  Arbeitsblättern, Klassenarbeiten, Prüfungen, Stoffverteilungsplänen.
\item |kapack.sty| : Eine Sammlung von \LaTeX-Befehlen
  für die Erstellung von Aufgaben, Aufgabensammlungen. 
  
  |kapack.sty| wird von |teacher.cls| automatisch geladen.
  
  |kapack.sty| ist nur Funktionsfähig, wenn die Dokumentklasse
  |teacher| benutzt wird.

\item |teacherpack.sty| : Eine Sammlung von nützlichen \LaTeX-Befehlen
  für immer wieder vorkommende Aufgaben eines Lehrers. 
  
  |teacherpack.sty| wird von |teacher.cls| automatisch geladen.

  |kapack.sty| kann auch mit anderen Dokumentklassen zusammen benutzt werden.

\item |bb.cls| : Die Dokumentklasse |bb|
(\textbf{b}lack\textbf{b}oard) ist dazu da ein Tafelbild zu
erstellen. Experientell!!!  \item |folie.cls| : Eine Dokumentklasse
zum Erstellen von
  *.pdf-Folien. Halb Experimentell!
\item |problectix*| : Eine sammlung von PERL-Scripten zum Organisieren
  der Aufgaben von |teacher.cls|.
\item |jefflatex| : ein script zum erzeugen von *.ps bzw. *.pdf aus
  *.tex-Dateien. Dieses Script kann aus |emacs| heraus aufgerufen
  werden, und erzeugt auch aus separaten Aufgaben (ohne
  |\begin{document}|, ...) eine *ps-Datei
\end{itemize}




\subsection{Installation von \texttt{problectix}}

Um \texttt{problectix} unter Debian-GNU/Linux zu installieren, gehen
sie wie folgt vor:



\begin{enumerate}
\item Laden sie die neueste Version des |problectix-x.x.x.deb|
  von Webserver des Beruflichen Schulzentrums Leonberg:
|http://cvs.bszleo.de| herunter.  

\item Gehen sie als user |root| in das Verzeichnis in dem
|problectix-x.x.x.deb| liegt, und rufen sie auf:

|   host:~ # dpkg -i problectix-x.x.x.deb|

\item Testen sie die Installation als nomaler |user| mit dem Befehl.

|   user@host:~ # problectix-test|

Es entsheht ein Verzeichnis |/home/user/problectix-test|, das
Beispieldateien in *.pdf und *.ps enthält.

Der Test kopiert Beispiele (*.tex) nach |/home/user/problectix-test|
und führt die Schritte |latex|, |dvips| bzw. |pdflatex| durch.


Er dauert je nach Rechenleistung einige Minuten!

Die erzeugten \texttt{*.ps} und \texttt{*.pdf}-Dateien dienen zur
visuellen Kontrolle der korrekten Funktion von \verb|problectix|.


\end{enumerate}



\subsection{Konfiguration von \texttt{problectix}}

\subsubsection{Suchpfad für eigne Aufgaben angeben}

Wenn in einem \LaTeX-Dokument ein |\input{dateiname}|-Befehl auftritt,
dann entscheidet die Umgebungsvariable |$TEXINPUTS| in welchen Pfaden
nach der Datei \verb|dateiname| gesucht wird.

Für die Verwendung von |problectix| ist es sinnvoll, ein Verzeichnis
einzurichten, in dem sich \textit{alle} Aufgaben befinden.
Üblicherweise wird dieses Verzeichnis |mytex| genannt.

Setzen sie Dann die Umgebungsvariable |$TEXINPUTS| so, dass dieses
Verzeichnis durchsucht wird:
  
Passen sie dazu die Datei |.bashrc| in ihrem Homeverzeichnis
folgendermaßen an:

|    # $TEXINPUTS anpassen                      |
\vspace{-3mm}

|    export TEXINPUTS="$HOME/mytex//::./figures"|

\subsubsection{Das Script \texttt{jefflatex} von \texttt{emacs} aus aufrufen}

Das Script |jefflatex| wird benutzt um eine Aufgabendatei (die kein
|\begin{document}| , \ldots enthält) zu \verb|latex|en, \verb|dvips|en
  und mit einem *-ps-Viewer anzuzeigen. Es kann auch PDF-\LaTeX{}
  augerufen, und das Ergebnis mit einem *.pdf-Viewer engezeigt werden.

Damit mit |emacs| und mit |auctex| das Script |jefflatex| aufgerufen werden kann, 
fügen sie Bitte folgende 4 Zeilen zu der |TeX-command-list| in der Datei
|/usr/share/emacs/site-lisp-el/tex-site.el| hinzu:\sloppy

\begin{verbatim}
   (defvar TeX-command-list
   '(
     ;; ...
     ;; existing commands / existierende Befehle
     ;; add the next 4 lines
     ;; All-in-one: latexing, open viewer
         ("All-in-one" "jefflatex --file %s" TeX-run-command nil t)
     ;; All-in-one-PDF: perl-Script, das alles latext und viewer öffnet
         ("All-in-one-PDF" "jefflatex --pdf --file %s" TeX-run-command nil t)
     ;; existing commands / existierende Befehle
     ;; ...
    )
\end{verbatim}

Dies sorgt dafür, dass in \verb|emacs| mit |C-c C-c| die Funktionen
|All-in-one| und |All-in-one-PDF| aufgerufen werden können.

Wenn sie zu diesem Aufruf die Funktionstaste |F5| (PostScript
erzeugen) bzw.  |Shift-F5| (PDF erzeugen) benutzen wollen, dann fügen
sie folgendes in ihre persönliche |.emacs|-Datei hinzu:

\begin{verbatim}
   (defun do-All-in-one ()
     "Startet latex-dvips-Viewer-Vorgang."
     (save-buffer)
     (interactive)
     (TeX-command "All-in-one" 'TeX-master-file)
   )
   (defun do-All-in-one-pdf ()
     "Startet latex-pdf-Viewer-Vorgang."
     (save-buffer)
     (interactive)
     (TeX-command "All-in-one-PDF" 'TeX-master-file)
   )

 to have some keys in LaTeX-Mode only:
   (add-hook 'LaTeX-mode-hook
          '(lambda ()
                   (define-key LaTeX-mode-map [f5] 'do-All-in-one)
                   (define-key LaTeX-mode-map [S-f5] 'do-All-in-one-PDF)
           )
   )

\end{verbatim}

Die Funktionstasten werden nur im |latex-mode| für den Aufruf von |jefflatex| 
benutzt. In anderen Modi können sie somit für andere Aufgaben benutzt werden


\newpage

\part{Die Dokumentklasse \texttt{teacher.cls}}
%\author{Rüdiger Beck}
%\maketitle

\section{Einführung in \texttt{teacher.cls}}

Die Dokumentklasse |teacher.cls| dient dazu, Arbeitsblätter,
Klassenarbeiten, Prüfungen, Stoffverteilungspläne ... zu erstellen.
Also alles, was ein Lehrer so an Dokumenten braucht.

Eine zentrale Rolle spielen Aufgaben. Eine Aufgabe, wird mit den
Befehlen dieser Dokumentklasse formatiert und in einer separaten Datei
abgespeichert. Dann kann die Aufgabe zum einen in Aufgabenblättern und
dazugehörigen Lösungsblättern verwendet werden. Zum anderen kann sie
in Klassenarbeiten und Prüfungen verwendet werden oder in eine
umfassende Aufgabensammlung eingebunden werden.

Für die Erstellung typischer Aufgaben sind \LaTeX - Befehle vorhanden,
die eine einfache Formatierung der Aufgaben ermöglichen, sowie das
Zusammenzählen von Punkten, ein- und ausblenden der Lösungen, usw.
ermöglichen.

\section{Die Optionen der Dokumentklasse \texttt{teacher}}

\subsection{Formatierungs-Optionen für die Aufgaben}

Von zentraler Bedeutung sind die Optionen, die es erlauben je nach
Anwendungsfall (Klassenarbeit, Prüfung, Arbeitsblatt, ..) die
Aufgaben anders zu Formatieren.

Wenn keine dieser Optionen angegeben wird, so wird \textit{alles} angezeigt:
\begin{itemize}
   \item Dateiinformationen,Formatieungsinformationen,Versionsinformationen
   \item Aufgabenstellung
   \item Lösungsbereiche: Lösungslinien bzw. Lösungskaros, in die die
     Schüler ihre Lösungen eintragen können.
   \item Korrekturhilfen: Punktzahlkasten zum eintragen der Punkte,
     Fachangabe
   \item Gruppeninformationen (Gibt es mehrere Versionen dieser
     Aufgabe für die Gruppen A,B,C?)
   \item Projektinformationen (Gibt es eine Projektversion dieser Aufagabe)
   \item Lösung der Aufgabe
\end{itemize}

Hier die Formatierungs-Optionen im Überblick:


\begin{tabular}{p{40mm}cccccc}
&[]& \texttt{ka} & \texttt{kamulti} & \texttt{exam} & \texttt{arb}& \texttt{lsg} \\ \hline \hline
Dateininformationen   & x &   &   &   &   & x  \tabularnewline \hline
Aufgabenstellung      & x & x & x & x & x &   \tabularnewline \hline
Lösungsbereiche       & x & x & x & x &   &   \tabularnewline \hline
Korrekturhilfen       & x & x & x &   &   &   \tabularnewline \hline
Gruppeninformationen  & x &   &   &   &   & x \tabularnewline \hline
Projektinformationen  & x &   &   &   &   & x \tabularnewline \hline
Lösung                & x &   &   &   &   & x \tabularnewline \hline
\end{tabular}


Folgende Optionen dienen als Formatierungs-Optionen:

\DescribeMacro{ka} Mit der Option |ka| werden die Aufgaben so
formatiert, dass sie in Klassenarbeiten verwendet werden können. Es
werden Lösungslinien erzeugt, erreichbare Punktzahlen angegeben, und
ein Punktzahlkasten erzeugt, in dem der korrigierende Lehrer die
erreichte Punktzahl von Hand eintragen kann.

Am Ende Der Klassenarbeit wird ein Bereich ausgedruckt, in dem die
Punkte zusammengezählt werden, und die Noten angegeben werden können.


\DescribeMacro{kamulti} \label{kamulti} Ebenfalls für Klassenarbeiten
ist die Option |kamulti| geeignet. Die Punkte werden getrennt nach
Fächern aufsummiert. Somit können in \textit{einer} Klassenarbeit
Noten für \textit{mehrere Fächer} vergeben werden. Um die Schüler zu
informieren zu welchem Fach welche Teilaufgabe zählt, werden neben dem
Punktzahlkasten ein Kürzel für das Fach angegeben (z.B. \textbf{M} für
Mathe)

\DescribeMacro{notenliste} Die Option |notenliste| ist nur als
Zusätzliche Option zu |ka| und |kamulti| sinnvoll. Sie erstellt eine
Notenskala am Ende der Klassenarbeit. Die Maximale Punktzahl wird aus
den verwendeten Aufgaben errechnet. Bei der Option |kamulti| wird für
jedes Fach eine Notenskala erstellt.

\DescribeMacro{exam} Sollen keine Korrekturinformationen angezeigt
werden,wird die Option |exam| verwendet. Lösungslinien und
Lösungskaros werden jedoch angezeigt.


\DescribeMacro{lsg} Mit der Option |lsg| werden nur die Lösungen
angezeigt. Somit kann z. B. ein Lösungsblatt für eine Klassenarbeiten
oder Arbeitsblätter erstellt werden.

\DescribeMacro{arb} Mit der Option |arb| werden Arbeitsblätter
erstellt.


\subsection{Allgemeine Optionen}

Mit folgenden allgemeinen Optionen kann die Anzeige modifiziert werden:

\DescribeMacro{sw} Will man auf einem Schwarz-Weiss Drucker
ausdrucken, sollte man die Option |sw| einschalten. Dann wird farbige
Schrift Schwarz ausgedruckt. Auf einzubindende Grafiken hat die Option
allerdings keinen Einfluss. Sie werden immer noch in ihren
Originalfarben ausgedruckt. Mit einem Schwarzweissdrucker also in
Graustufen.

\DescribeMacro{arial} Diese Option stellt fast alle Schriftarten auf
eine Arial-ähnliche Schrift um. Die Dokumente sehen dann in etwa so
aus, als ob sie mit einem stinknormalem
WYSIWIG-Textverarbeitungsprogramm erzeugt wurden. Sinvoll nur für den,
der so tun muss als würde er nicht mit \LaTeX{} arbeiten, sondern mit
W\ldots.

\DescribeMacro{debug} Mit der Option |debug| werden zusätzliche
Informationen eingeblendet. So kann im formatierten Dokument z.B.
erkannt werden, dass die Angabe des Schulnamens mit dem Befehl
|\School| geschieht

\DescribeMacro{frame} Wenn dies von dem verwendeten Layout unterstützt
wird (Standardlayout, \texttt{bszleo}), kann mit dieser Option ein
Rahmen um das Blatt eingeblendet werden.


\subsection{Andere Layouts}

Das Standard-Layout einer Seite ist so festgelegt, dass wichtige
Informationen (Schulname, Lehrerkürzel, Seitennummer, Dateiname,
Versionsnummer und Ausdruckdatum) in der Kopfzeile bzw. der Fusszeile
angezeigt werden können.

Soll ein Dokument abweichend von diesem Standard-Layout verwendet
werden, so gibt es 2 Möglichkeiten:

\begin{enumerate}
\item Sie nutzen die Option |empty|. Dann werden keinerlei Kopfzeilen
  ausgegeben. Mit ihrem favourisiertem WYSYWIG-Programm bedrucken sie
  dann diese Seiten nochmals, oder schnibbeln mit der Schere eigene
  Kopf uns Fusszeilen, die dann aufgeklebt werden.
\item Sie erstellen sich ein eines, an ihre Schule angepasstes Layout mit \LaTeXe.
\end{enumerate}

Wenn sie die letztere Möglichkeit bevorzugen, also ein komfortables
Arbeiten gewohnt sind, dann lesen Sie weiter.

\subsection{Eigenes Layout erstellen}

\subsubsection{Prinzip von eignen Layouts}

Wenn sie in den Optionen von |teacher| eine nicht bekannte Option, wie
zum Beispiel |myschool| angeben, dann sucht \LaTeX{} nach folgenden
Dateien:

\begin{itemize}
\item |myschool-aeoc.tex| --- aeoc = At end of Class
\item |myschool-abd.tex| --- abd = At Begin Document
\item |myschool-aed.tex| --- aed = At End Document
\end{itemize}

Werden diese Dateien gefunden, so werden die darin enthaltenen
Befehle, ... zum angegeben Zeitpunkt geladen.

Beispiel: 

Sie wollen zu Beginn der Klassenarbeit Viel Glück wünschen.  Dann
schreiben sie in \verb|myschool-abd.tex| die Worte: 

\verb|   Viel Glück bei der Klassenarbeit|.

In der Distribution werden 3 Layouts ausgeliefert:

\begin{itemize}
\item Ohne Option wir das Standardlayout verwendet.

\item \DescribeMacro{bszleo} Die Option |bszleo| erzeugt eine
  Formatierung, wie ich sie selbst am Beruflichen Schulzentrum
  Leonberg verwende. 
  
  Wenn sie also sehen wollen, wie bei mir ein Arbeitsblatt bzw.
  Klassenarbeit für die Schüler aussieht so geben sie die Optionen
  \verb|bszleo|, \verb|kamulti| und \verb|notenliste| , bzw.
  \verb|bszleo|, \verb|arb| an!
\item \DescribeMacro{bszleoexam} Für die Prüfungen verwende ich ein
  anderes Layout. Es ist zum Beispiel ein Deckblatt erforderlich,
  und auf jeder Seite muss der Prüfungskopf erscheinen.
  
  Wenn sie also sehen wollen, wie an unserer Schule eine prüfung
  aussieht so geben sie die Optionen |bszleoexam|, |kamulti| und
  |notenliste| an!

\end{itemize}


Die jeweils 3 Dateien der Optionen \verb|bsleo| und \verb|bszleoexam|
dieser Optionen sind mit Kommentaren versehen, und können somit als
Ausgangspunkt für die eigene Layouts dienen.

\subsubsection{Textfelder in eignen Layouts}

Beim erstellen von Vorlagen können die im nächsten Kapitel angegebenen
Felder benutzt werden. So kann z.B mit \verb|\Quelle{Text}| eine
Quellenangabe angegeben werden. 

In der Vorlage kann dann an der gewünschten Stelle mit
\verb|\quelleuse{}| dieser Abgespeichere Text eingesetzt werden.

Ebenso kann auf alle anderen Texte zugegriffen werden.

\section{Ausfüllen des Arbeitsblatt- bzw. Klassenarbeit-Kopfes}

\label{kopfbefehle} An bestimmten vordefinierten Stellen der mit \verb|teacher.cls|
erstellten Dokumente sind Textfelder verwendet. Mit bestimmten
Befehlen kann diesen Textfeldern eine Inhalt zugewiesen werden.

Für eine Übersicht der in einer Vorlage eingebauten Textfelder können
sie die Option \verb|debug| mit angeben. Dann wird anstelle des
Inhalts eines Textfelds der Befehl in rot ausgegeben, mit dem
das Texfeld mit Inhalt gefüllt werden kann.

Im folgenden werden die Befehle zum füllen der Textfelder mit Inhalt
beschrieben:

\subsection{Befehle für Arbeitsblätter}

\DescribeMacro{\School\{\}} Enthält den Schulnamen.

\DescribeMacro{\UserToken\{\}} Wird zum setzen des Lehrerkürzels benutzt.

\DescribeMacro{\Titelo\{\}} Gibt den Inhalt der oberen Titelzeile des
Arbeitsblattes bzw. der Klassenarbeit an.


\DescribeMacro{\Titelu\{\}} Gibt den Inhalt der unteren Titelzeile des
Arbeitsblattes bzw. der Klassenarbeit an.

\DescribeMacro{\Fach\{\}} Damit wird ein Fach festgelegt, dem
diesesDokument zugeordnet werden kann.  Es sind einige Kürzel erlaubt,
z. B. m oder M für Mathe.

\DescribeMacro{\Datum\{\}} Gibt das Datum an.

\DescribeMacro{\Quelle\{\}} Gibt die Quelle an. Sie steht je nach
Blattlayout an verschiedenen stellen.  Beim Arbeitsblatt mit Rahmen z.
B. in der linken unteren Ecke des Rahmens.

\DescribeMacro{\Ausdruck\{\}} Gibt bei leerem Argument das
Ausdruck-Datum und das Lehrerkürzel aus. Wird ein Argument angegeben,
so wird dieses ausgegeben.

\DescribeMacro{\Revision\{\}} Gibt bei leerem Argument den Dateinamen
und die CVS-Revisionsnummer an (falls vorhanden). Wird ein Argument
angegeben, so wird dieses ausgegeben.

Um Die CVS-Revisionsnummer auszugeben muss folgende Zeile in der Datei auftauchen:
\begin{verbatim}
   \documentclass{teacher}
   \RCS $Revision$ 
\end{verbatim}

Der Inhalt von \verb|$Revision$| wird von CVS bei jeder Änderung
gepached (verändert).

\DescribeMacro{\Entwurf\{\}} Markiert das ganze Dokument als Entwurf
(Graue Schrift \verb|Entwurf| im Hintergrund einer Seite). Außerdem
wird die CVS-Revisionsnummer (falls vorhanden) und das Datum
ausgegeben.

Wird ein Argument angegeben, so wird anstelle von \verb|Entwurf| das
Argument ausgegeben. Mit dem optionalen Parameter kann die Größe
dieser Hintergrundschrift angegeben werden.

Um den Text zu sehen, muss nach PostScript konvertiert werden (In
\verb|*.dvi| ist die Hintergrundschrift unsichtbar).

\DescribeMacro{\Klasse\{\}} Angabe der Klasse.

\DescribeMacro{\Blatt\{\}} Gibt die aktuelle Seitenzahl aus (leeres
Argument). Wenn ein Argument angegeben wird, so wird dieses
ausgegeben.

\DescribeMacro{\Name\{\}} Gibt den Schülernamen an.

\subsection{Befehle für Klassenarbeiten}

\DescribeMacro{\Fehler} Ändert das Wort \texttt{Fehler} im Kopf der
Klassenarbeit um. Beispiel: |\Fehler{Punkte:}|

\DescribeMacro{\Muendlich} Wie bei |\Fehler|

\subsection{Prüfungsdauer (nur bei \texttt{bszleoexam})}

\DescribeMacro{\APtime} Prüfungsdauer im Fach Arbeitsplanung.

\DescribeMacro{\Ttime} Prüfungsdauer im Fach Technologie.

\DescribeMacro{\Mtime} Prüfungsdauer im Fach Mathematik.

\DescribeMacro{\Totaltime} Gesamt-Prüfungsdauer.

\subsection{Benutzerdefinierte Einstellungen}

Jeder Bearbeitungsvorgang sucht im Homeverzeichnis des aufrufenden
Users nach der Datei |.problectix/problectix.tex| und führt die darin
enthaltenen \LaTeX-Befehle aus. 

Steht in dieser Datei z. B. |\UserToken{jeffbeck}|, erscheint an den
entsprechenden Stellen der Vorlage |jeffbeck| (Wenn die Einstellung
nicht nach |\begin{document}| im zu bearbeitenden Dokument
  überschrieben wird).




\section{Erstellen von Aufgaben}


\subsection{Dateinamen --- Konventionen}

Jede Aufgabe wird in einer Datei abgelegt. Diese Datei wird in ein passendes
Verzeichnis abgelegt, um die Übersichtlichkeit zu bewahren. 

Z. B.  in |mytex/aufgaben-kb/3-lehrjahr/Verdichter/|

Konventionen für die Dateinamen:

\begin{itemize}
 \item Dateinamen beginnen mit Großbuchstaben.
 \item Die Dateinamen sollten aussagekräftig sein, und ein Gebiet
   umfassen (Verdichter, Regelkreis, Verflüssiger, \ldots )
 \item Nach dem Dateinamen sollte das Fach in Kurzform vermerkt sein, dem die
   \textit{gesamte} Aufgabe zugeordnet ist.
 \item Die einzelnen Aufgaben eines Gebietes werden mit einer
   dreistelligen Nummer versehen.
 \item Aufgaben, die in leicht veränderter Form in einer Prüfung
   verwendet wurden, sind mit dem Zusatz |-pr| versehen.
 \item Beinhaltet eine Aufgabe ein |*.eps|-Datei so ist
   derselbe Name zu wählen. 
 \end{itemize}

 \vspace{3mm}

 Beispiele für Dateinamen:
\begin{itemize}

  \item |Verdichter-m-001.tex| 

     mit 
     \begin{itemize}
     \item |Verdichter-m-001a.eps|
     \item |Verdichter-m-001b.eps|
     \end{itemize}

  \item  |Regelkreis-t-002.tex| mit |Regelkreis-t-002.eps|

  \item |Regelkreis-m-002-pr.tex| 
\end{itemize}



\subsection{Erstellen der Aufgabenstellung}

Jede Aufgabe wird in einer Datei abgespeichert. Diese Datei muss
folgendermaen aufgebaut sein:

|    \begin{aufgabe}[Fach]{Aufgabentitel}| \newline
|       \begin{textonly}                        %%optional        | \newline
|          ... %% Text vor den Teilaufgaben     %%optional        | \newline
|       \begin{textonly}                        %%optionel        | \newline
|       \begin{teilaufgabe}[ohnenummer]{Teilaufgabenfach}{Linienzahl}{Punkte}|\newline 
|           Teilaufgabentext                                      | \newline
|           ...                                                   | \newline
|           \korrektur{Länge}...                 %% optional      | \newline
|       \end{teilaufgabe}                                         | \newline
|       \begin{loesung}                         %%optional        | \newline
|          \punkte{Richtige Antwort zu 1}       %%optional        | \newline
|                 {Punkteanzahl zu 1}           %%optional        | \newline
|                 {Kommentar zu 1}              %%optional        | \newline
|          \punkte{Richtige Antwort zu 1}       %%optional        | \newline
|                 {Punkteanzahl zu 2}           %%optional        | \newline
|                 {Kommentar zu 2}              %%optional        | \newline
|       \end{loesung}                           %%optional        | \newline
|    \end{aufgabe}                                                | \newline

Die verwendeten Umgebungen und ihre Parameter werden im folgenden erläutert.


\DescribeEnv{aufgabe} Die Umgebung |aufgabe| beinhaltet die
\textit{gesamte} Aufgabe. Sie erstellt Kopf- und Fußzeile.  Der
optionale Parameter |Fach| ordnet der \textit{gesamten} Aufgabe ein
Fach zu. Dieses Fach hat im weiteren keine Bedeutung mehr. Bei
Fächerübergreifenden Aufgaben dient |Fach| als Orientierung für den
Schwerpunkt der Aufgabe.

Der Parameter |Aufgabentitel| gibt jeder Aufgabe eine Überschrift, die
deren Inhalt kurz umreißt. Sie sollte knapp gewählt werden, da kein
Zeilenumbruch vorgesehen ist (z.B. \verb|Verdichterberechnung|).

\DescribeEnv{teilaufgabe}
Die Umgebung |teilaufgabe| umschließt die Aufgabenstellung einer Teilaufgabe. 
Der optionale Parameter |ohnenummer| sorgt dafür, dass Teilaufgaben keine
Nummerierung erhalten. Dies ist notwendig, wenn die Aufgabe nur eine
Teilaufgabe enthält.

Der Parameter |Teilaufgabenfach| ordnet jede Teilaufgabe einem Fach
zu. Mögliche Werte für |Teilaufgabenfach| sind |T|, |t|, |AP|, |ap|,
|Ap|, |M|, |m|

Durch die Angabe von |Teilaufgabenfach| können bei Klassenarbeiten die
mehrere Fächer beinhalten (Fächerverbindenden Klassenarbeiten) Punkte
nach Fächern getrennt aufaddiert werden, wenn die Option
\texttt{kamulti} (Siehe Seite \pageref{kamulti}) verwendet wird.
 
Der Parameter |Linienzahl| gibt an wieviele Lösungslinien erscheinen
sollen. Wurde als Fach Mathe angegeben, wird statt den Lösungslinien
ein kariertes Feld ausgegeben. Der Parameter |Linienzahl| gibt dann
die Höhe des Felden in Kästchen an.
 
Ist die |Linienzahl| null, dann erscheint ein Punktzahlkasten 
ohne Lösungslinien.

Der Parameter |Punkte| gibt an, wieviele Punkte in dieser Teilaufgabe erreicht
werden können. Diese Punktzahl erscheint neben dem Punktzahlkasten. 

Ist die |Linienzahl| 1000, dann erscheint kein Punktzahlkasten und die
Punktanzahl wird null.  Ein negativer Wert der |Linienzahl| erzeugt
einen Punktzahlkasten ohne Lösungslinien. Der Punktzahlkasten wird
jedoch um den negativern Wert der |Linienzahl| in mm angehoben. Damit
kann ein Überlappen von mehreren Punktzahlkästchen bei sehr kurzen
Aufgabenstellungen verhindert werden.

\subsubsection{Normaler Text in einer Aufgabe}

\DescribeEnv{textonly} Mit der Umgebung |textonly| wird ein Textblock
innerhalb einer Aufgabe erzeugt.  Der Textblock hat keine
Nummerierung, keine Maximalpunktzahl und keinerlei Lösungslinien.
Intern werdern die Textblöcke einer Aufgabe jedoch mit negativen
Zahlen durchnummeriert. Mit \verb|\ohne[-1][2]{-4}| werden der erste
Textblock(-1), die zweite Teilaufgabe (2) und der vierte Textblock
(-4) verborgen.

Zu beachten ist, dass jeglicher Text der Aufgabenstellung entweder in
der |\textonly|-Umgebung oder in der |teilaufgabe|-Umgebung steht. Nur
so kann bei einem Lösungsblatt die Aufgabenstellung vollständig
ausgeblendet werden.


\subsubsection{Seitengroße Grafiken im Anhang}

Bei vielen Aufgaben sind Grafiken erforderlich, die über eine ganze
Seite gehen. (Für kleine Grafiken siehe Seite \pageref{grafiken}.)

\DescribeMacro{anhang} Diese ganzseitigen Grafiken können als Anhang
an das eigentliche Dokument (Arbeitsblatt, Klassenarbeit, Prüfung)
angehängt werden. An der Stelle in einer Teilaufgabe an der auf die
Grafik im Anhang verwiesen werden soll, steht der Befehl:

|     \anhang[graphicx-parameter]{Dateiname}{Beschreibung}|

Das Argment |Dateiname| gibt an, in welcher Datei sich die
|*.eps|-Grafik befindet. 

Mit der |Beschreibung| wird der Inhalt der Grafik näher beschrieben.
Die |Beschreibung| findet man auf der Anhangseite unten links in der
Fusszeile wieder. Benutzt man ein Layout, das eine Inhaltsangabe
erzeugt (z.B. |bszleoexam|), so erscheint die Anhangseite mit ihrer
Seitenzahl im Inhaltsverzeichnis.

Die erste Angangseite bekommt den Titel \textbf{Anhang A}, die zweite
Anhangseite \textbf{Anhang B}, usw. 

Mit dem optionalen Argument |graphicx-parameter| können an das
|graphicx|-Paket Parameter übergeben werden.  Ohne diese Angaben,
werden die Grafiken im Anhang auf die maximale Größe skaliert, wobei
der Vergrößerungsfaktor in x und y-Richtung konstant ist.

Überlegenswert als |graphicx-parameter| ist z.B. |width=120mm|.Damit
wird die Breite der Grafik auf 120mm festgelegt. Für die
kompletten Möglichkeiten lesen sie bitte die Dokumentation zum Paket
|graphicx.sty|.


\subsection{Abgleichen des Aufgabenendes}

Bei manchen Aufgaben ist ein manueller Abgleich des Aufgabenendes erforderlich.

Wird in einer Aufgabe ohne abschließende Lösungslinien am Ende der
Aufgabenstellung eine Grafik verwendet, dann fluchtet der Rand der
Grafik mit der Unterkante des Punktzahlkastens. Besitz die Grafik
einen weissen Rand, so entsteht ein \textit{flatterndes
  Teilaufgabenende} entsteht.

Um Platz zu sparen und zwischen den Teilaufgaben bzw. Aufgaben einen
einheitlich breiten \textit{whitespace} zu erhalten sollten diese
flatternden Aufgabenenden \textit{manuell} abgeglichen werden.

Dieser Abgleich geschieht folgendermaßen:
\begin{enumerate}
\item In der Dokumentklasse |teacher| wird die Option |debug| genutzt.
  Diese Option sorgt unter anderem dafür, dass an der Unterkante eines
  jeden Punktzahlkastens eine schmale, horizontale Linie erscheint.
  Diese hat im linken Randbereich die rote Kennzeichnung \texttt{DEBUG},
  und 2 Abstandsmessskalen mit Linien im Millimeterabstand wie auf
  zwei senkrecht angelegten Linealen.
   \item Im erzeugten Postscript-File kann nun abgelesen werden, um wieviele mm der
     Aufgabenkasten nach oben (Regelfall) oder nach unten verschoben werden muss,
     um mit der Aufgabenunterkante zu fluchten.
   \item \sloppy Mit dem Befehl |\korrektur{längenangabe}| wird die Korrektur 
     als letztes
     vor dem Beenden der |teilaufgabe|-Umgebung (|\end{teilaufgabe}|)eingetragen.
     Der Befehl |\korrektur{längenangabe}| ruft lediglich den Befehl
     |\vspace{längenangabe}| auf. Ein neuer Befehl wurde deshalb definiert um
     \textit{nachträglich} in jeder Aufgabe noch Befehle nachtragen zu können, 
     falls dies erforderlich wird.
 \end{enumerate}




\subsection{Erstellen der Lösungen}

Lösungen (d.h. die gesamte |loesung|-Umgebung) können auch weggelassen
werden.

\DescribeEnv{loesung}
Innerhalb der Umgebung |loesung| wird die Lösung eingegeben. Sie zählt zur
vorherigen Teilaufgabe. Die Umgebung |loesung| kann auch weggelassen werden,
dann darf aber der folgende Befehl |\punkte| nicht auftauchen.

\DescribeMacro{punkte}
Der Befehl Punkte hat 3 Parameter. Der Parameter |Richtige Antwort| ist
selbsterkärend.
 
Der Parameter |Punkte| gibt die Punktzahl an, die für |Richtige Antwort|
vergeben wird.

Der Parameter |Kommentar| hat die Aufgabe für den Lehrer beim korrigieren
zusätzliche Informationen zur Verfügung zu stellen. Z.B. \ldots zählt nur einen
halben Punkt \ldots .

\section{Erstellen einer Klassenarbeit aus Aufgaben}

\subsection{Klassenarbeits-Datei}

Die Grundstruktur einer Klassenarbeits-Datei sieht folgendermaßen aus:

|    \documentclass[11pt,ka]{teacher}| \newline
|       \Titelu{Klassenarbeitstitel}| \newline
|       \School{Klassenarbeitstitel}| \newline
|       \UserToken{Klassenarbeitstitel}| \newline
|       \Fach{m}| \newline
|       \gruppea| \newline
|    \begin{document}| \newline
|       \nehme{aufgabe-1}| \newline
|       \nehme{aufgabe-2}| \newline
|       \nehme{aufgabe-3}| \newline
|       \ohne[-1][2]{1}| \newline
|       \nehme{aufgabe-4}| \newline
|    \end{document}| \newline




In der oberen Titelzeile steht die Angabe Klassenarbeit. Dieser Inhalt
kann mit dem Befehl |\Titelo{Text}| durch |Text| ersetzt werden. Die
untere Titelzeile kann mit |\Titelu{text}| angegeben werden.

Für weitere sinnvolle Angaben siehe Seite \pageref{kopfbefehle} ff.

\subsection{Einfügen von Aufgaben}

\DescribeMacro{nehme} Um eine in einer Datei abgespeicherte Aufgabe in
eine Klassenarbeit (Prüfung, Arbeitsblatt, \ldots) einzubinden wird der Befehl

|     \nehme[option]{Dateiname}|

verwendet. 

Um den \LaTeX -Quellcode der Datei |Dateiname| einzufügen, wird
anstelle von |option| der Wert |quellcode| angegeben.

Mit der Option |[beispiel]| wird eine Aufgabe ausgegeben \textit{und} deren
Quellcode angefügt.

\DescribeMacro{nehmealle}
Bei Aufgaben, innerhalb derer mit |\ab{...}| - und |\abc{...}| -
Befehlen veschiedene Gruppen definiert wurden, können \textit{alle} Gruppen
nacheinander angezeigt werden, wenn sie mit dem Befehl

|    \nehmealle{Dateiname}|

Die Stellen, an denen sich die A, B und C-Version unterscheiden sind farblich
hervorgehoben

\DescribeMacro{allealle}
Für eine \textit{Aufgabensammlung} ist im Vorspann der Befehl

|    \allealle|

sehr nützlich. Es definiert den Befehl |\nehme{Dateiname}| in den Befehl
|\nehmealle{Dateiname}| um. So kann von \textit{nur eine Gruppe anzeigen}
(Standardeinstellung) auf \textit{alle erzeugten Gruppen aller Aufgaben zeigen}
umgestellt werden. Der Umfang und die Rechenzeit für die Aufgabensammlung kann
sich dabei natürlich vervielfachen (max. 3\,x).

\subsection{Modifizieren schon vorhandener Aufgaben}

\DescribeMacro{ohne}
Es kann vorkommen, dass man eine in einer Datei vorhandene Aufgabe verwenden
will, \textit{ohne} eine Teilaufgabe dieser Datei verwenden zu wollen. Grund
könnte sein, dass der Stoff noch nicht behandelt wurde, oder dass die Aufgabe
zu umfangreich ist, um noch auf die vorhandene Seite zu passen.

Das Unterdrücken von Teilaufgaben erfolgt mit dem Befehl

|    \ohne[Teilaufgabe][Teilaufgabe]{Teilaufgabe}|

Als Parameter |Teilaufgabe| können positive Werte stehen. Dann wird die
entsprechende Teilaufgabe weggelassen. 

Verwendet man als Parameter für |Teilaufgabe| einen negativen Wert, werden die
durch die Umgebung |textonly| erzeugten Textblöcke weggelassen.

Der Befehl |\ohne| kann nur \textit{einmal} vor jeder Aufgabe verwendet werden.


\section{Klassenarbeiten mit mehreren Gruppen bzw. Projektbezug}


\subsection{Unterschiedliche Varianten für mehrere Gruppen}

\DescribeMacro{ab} \DescribeMacro{abc}
Um aus einer Aufgabe mehrere Varianten zu erzeugen, gibt es die beiden Befehle

|   \ab{Text/Befehle der Gruppe A}{Text/Befehle der Gruppe B}|

und

|   \abc{Text/Befehle von A}{Text/Befehle von B}{Text/Befehle von C}|

 Die Befehle werden verwendet, wenn 2 bzw. 3 alternative Fragestellungen erzeugt werden
  sollen. Sie dürfen \textit{nicht beide} in einer Aufgabe vorkommen,
  da dies zweideutig wäre. Natürlich darf z. B. in der Klammer von
  |Text/Befehle von A:| und |Text/Befehle von C:| dasselbe stehen.
  
  \DescribeMacro{gruppea} \DescribeMacro{gruppeb}
  \DescribeMacro{gruppec} Erscheint im Vorspann einer Klassenrbeit
  einer der Befehle

 |    \gruppea|, |\gruppeb| oder |\gruppec|

 so wird bei allen Aufgaben, in denen die Befehle |\ab| - oder |\abc| verwendet 
 wurden, die zu der entsprechenden Gruppe gehörenden Texte eingesetzt.
 
 Standardmäßig ist ist |\gruppec| eingestellt, und es erscheint keine
 Gruppenangabe im KA-Rahmen.
 
 Bei einer Aufgabe ohne die Befehle |\ab{...}| oder |\abc{...}| wird
 die Aufgabe immer unmodifiziert ausgegeben.
 
 Bei einer Aufgabe mit dem Befehl |\ab{...}| ist keine Gruppe C
 vorhanden. Stattdessen wird der Eintrag von Gruppe A benutzt.

Diese Befehle können prinzipiell auch dazu verwendet werden um \textit{gänzlich}
verschiedene Aufgaben alternativ zu verwenden. Man sollte jedoch bedenken, dass
aufgrund des unterschiedlichen Platzbedarfs dieser Aufgaben die Klassenarbeiten
unterschiedlich lang ausfallen können.


\subsection{Projektaufgaben}

In \textit{einer} Aufgabe kann eine normale (=nicht projektbezogene), sowie eine
projektbezogene Fragestellung erzeugt werden. Dies geschieht mit dem Befehl:

|    \projekt{projektbezogen}{nicht projektbezogen}|

Standardmäßig wird der Inhalt von |{nicht projektbezogen}| in der
Klassenarbeit erscheinen. Wenn jedoch im Vorspann der Klassenarbeit der Befehl

|    \projektbezug|

steht, wird anstelle des Inhalts von |{nicht projektbezogen}| der Inhalt von
|{projektbezogen}| eingesetzt.

Dies ermöglicht, schon vorhandene Aufgaben nachträglich mit einer projektbezogenen
Fragestellung zu versehen.


\section{Umfangreiche Dokumente (Prüfungen)}

Bei umfangreichen Dokumenten ist es sinnvoll eine Untergliederung z.B
nach Fächern vorzunehmen.

Um eine Gliedeungs-Überschrift zu erzeugen dient der Befehl

|    \examfach{FachTitel}   |

mit dem in einer Schattenbox der Text |FachTitel| angezeigt wird. Es
wird jedoch keine neue Seite begonnen.

Gleichzeitig wird ein Eintrag ins Inhaltsverzeichnis erstellt. Ein
Inhaltsverzeichnis erzeugt automatisch z.B. das Layout |bszleoexam|
auf der ersten Seite.



  \DocInput{teacherpack.dtx}

\section{Parameterdateien}
Der Inhalt der Parameter-Dateien soll am Beispiel von \texttt{ka-format.tex}
erläutert werden.  Diese Datei wird eingelesen, wenn die Option \texttt{[ka]} in
der Dokumentklasse \texttt{teacher} angegeben wird. 

Die Datei \texttt{ka-format.tex} beinhaltet folgende Zähler: 

  \DocInput{../inputfiles/ka-format.tex}

\part{Die PERL-Scripte von \texttt{problectix}}

\section{Einführung in PERL-Scripte}

Diese Scripte helfen die erstellten Aufgaben zu verwalten.

\subsection{\texttt{problectix-test}}

Mit \verb|problectix-test| können die Funktionen von \verb|peoblectix|
getestet werden. Dazu wird im Homeverzeichnis des users ein
Verzeichnis \verb|problectix-test| erzeugt, in das Beispieldateien
kopiert werden.

Diese Beispieldateien werden mit \verb|latex|, \verb|dvips| bzw.
\verb|pdflatex| bearbeitet.

Schließlich können sie mit einem Dateibetrachter visuell geprüft werden. 

Alle aktuellen Optionen von \verb|problectix-test| können sie mit

\verb|   problectix-test --help|

anzeigen lassen. 

\PrintIndex

\end{document}
