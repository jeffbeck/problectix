\documentclass{ltxdoc}
\usepackage{ifthen}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{textcomp}
\usepackage{afterpage}
\usepackage{calc}
\usepackage[T1]{fontenc}
\usepackage[latin1]{inputenc}
\usepackage{ngerman}
\usepackage{fancybox} 
\usepackage{marvosym}
\usepackage[dvips]{color} 
\usepackage{fancyhdr}
\usepackage{moreverb}
\usepackage{twoopt}
\usepackage{rotating}
\usepackage{array}
%\usepackage{SIunits}
%%\usepackage{teacherpack}
%%\usepackage{kapack}
\setlength{\parindent}{0mm}
\setlength{\parskip}{3mm}
\OnlyDescription
\begin{document}
%%\title{problectx}
%%\author{jeff}

\newpage

%%\begin{titlepage}

%%\end{titlepage}


\title{\textbf{\LaTeX{} für Lehrer} 
\linebreak
\linebreak
Aufgabensammlungen \linebreak
für Klassenarbeiten unter Unix/Linux \linebreak
und andere Hilfsmittel für Lehrer
\linebreak 
\linebreak \textbf{Prob}lem Col\textbf{lect}ion on Un\textbf{ix}
\linebreak (\texttt{problectix})
}

\author{Rüdiger Beck}
\maketitle
\newpage


\tableofcontents

\listoftables

\newpage

\part{Die Distribution --- \texttt{problectix}}

\section{Grundlagen von \texttt{problectix}}

\subsection{Was ist \texttt{problectix}?}

|problectix| ist eine Sammlung von Werkzeugen (\LaTeX-Dokumentklassen,
Perl-Scripte, ...) mit denen man als Lehrer mit \LaTeX{} besonders
effektiv arbeiten kann.

--- Ab hier muss der Text woanders hin ---

Jede Aufgabe wird incl. Lösung in einer Datei abgelegt. Alle diese
Dateien zusammen bilden die Aufgabensammlung. Soll nun eine
Klassenarbeit oder ein Aufgabenblatt erstellt werden, so wird eine
Klassenarbeitsdatei bzw. eine Aufgabenblattdatei erstellt, und die
gewünschten Aufgaben per Einfügebefehl, der den Dateinamen
enthält, eingebunden.

Um den Einfügebefehl der Aufgabe einfach zu ermitteln, können mit einem
PERL-script alle Aufgaben-Dateien unterhalb eines Verzeichnisbaums
incl. Lösungen in eine html-Seite umgewandelt werden. Dabei liegt die
Aufgabe als \texttt{*.png}-Bild vor, sowie als Über-/Unterschrift der
Einfügebefehl in markierbarer Textform. Der Einfügebefehl kann nun
einfach in einen Editor kopiert werden, mit dem die Klassenarbeitsdatei
bzw. die Aufgabenblattdatei erstellt wird.

In Zukunft:

Per Script kann eine Aufgabensammung aller Aufgaben erstellt werden
(für die Schüler). Da diese Aufgabensammlung ebenfalls in Bild/HTML
vorliegt, kann sie per Webserver durchsuchbar gemacht werden.

Da die Erstellten Aufgaben in \LaTeX-Code vorliegen, können Sie in
eine Versions-Verwaltungs-Software (CVS) gestellt werden, damit
Korrekturen Zentral gesammelt werden können und auch mehrere Personen
zugreifen können. Der Zugriff auf den CVS-Server kann aus der ganzen
Welt erfolgen.

Versionsinformationen von CVS können können im Dokument ausgegeben werden.

\subsection{Die Bestandteile von \texttt{problectix}}

|problectix| besteht aus den folgenden Bestandteilen:

\begin{enumerate}
\item \LaTeX-Dateien
   \begin{itemize}
   \item |teacher.cls| : Die Dokumentklasse |teacher| zum Erstellen
     von Arbeitsblättern, Klassenarbeiten, Prüfungen, Aufgabensammlungen und
     Stoffverteilungsplänen.
   \item |kapack.sty| : Eine Sammlung von \LaTeX-Befehlen für die
     Erstellung von Aufgaben, Aufgabensammlungen.
  
     |kapack.sty| wird von |teacher.cls| automatisch geladen.
  
     |kapack.sty| ist nur Funktionsfähig, wenn die Dokumentklasse
     |teacher| benutzt wird.

   \item |teacherpack.sty| : Eine Sammlung von nützlichen
     \LaTeX-Befehlen für immer wieder vorkommende Aufgaben eines
     Lehrers.
  
     |teacherpack.sty| wird von |teacher.cls| automatisch geladen.

     |kapack.sty| kann auch mit anderen Dokumentklassen zusammen benutzt werden.

   \end{itemize}
\item \LaTeX-Dateien (Experimentell)
   \begin{itemize}
   \item |bb.cls| : Die Dokumentklasse |bb|
     (\textbf{b}lack\textbf{b}oard) ist dazu da ein Tafelbild zu
     erstellen.
   \item |folie.cls| : Eine
     Dokumentklasse zum Erstellen von *.pdf-Folien.
   \end{itemize}
\item Perl-Scripten
   \begin{itemize}
   \item |jefflatex| : ein Script zum erzeugen von *.ps bzw. *.pdf aus
     *.tex-Dateien. Dieses Script kann aus |emacs| heraus aufgerufen
     werden, und erzeugt auch aus separaten Aufgaben (ohne
     |\begin{document}|, ...) eine *ps-Datei.
     \item |problectix| : Ein Script zum erzeugen von Voransichten von
       Aufgaben und Aufgabensammlungen die mit |teacher.cls| erstellt wurden.
     \item |einmaleins| : Ein Script zum Erzeugen von
       Einmaleins-Aufgaben in \LaTeX-Code.
   \end{itemize}
\end{enumerate}





\subsection{Installation von \texttt{problectix}}

Um \texttt{problectix} unter Debian-GNU/Linux zu installieren, gehen
sie wie folgt vor:



\begin{enumerate}
\item Laden sie die neueste Version des |problectix-x.x.x.deb|
  von Webserver des Beruflichen Schulzentrums Leonberg:
|http://cvs.bszleo.de| herunter.  

\item Gehen sie als user |root| in das Verzeichnis in dem
|problectix-x.x.x.deb| liegt, und rufen sie auf:

|   host:~ # dpkg -i problectix-x.x.x.deb|

\item Testen sie die Installation als nomaler |user| mit dem Befehl.

|   user@host:~ # problectix-test|

Es entsheht ein Verzeichnis |/home/user/problectix-test|, das
Beispieldateien in *.pdf und *.ps enthält.

Der Test kopiert Beispiele (*.tex) nach |/home/user/problectix-test|
und führt die Schritte |latex|, |dvips| bzw. |pdflatex| durch.


Er dauert je nach Rechenleistung einige Minuten!

Die erzeugten \texttt{*.ps} und \texttt{*.pdf}-Dateien dienen zur
visuellen Kontrolle der korrekten Funktion von \verb|problectix|.


\end{enumerate}



\subsection{Konfiguration von \texttt{problectix}}

\subsubsection{Suchpfad für eigne Aufgaben angeben}

Wenn in einem \LaTeX-Dokument ein |\input{dateiname}|-Befehl auftritt,
dann entscheidet die Umgebungsvariable |$TEXINPUTS| in welchen Pfaden
nach der Datei \verb|dateiname| gesucht wird.

Für die Verwendung von |problectix| ist es sinnvoll, ein Verzeichnis
einzurichten, in dem sich \textit{alle} Aufgaben befinden.
Üblicherweise wird dieses Verzeichnis |mytex| genannt.

Setzen sie Dann die Umgebungsvariable |$TEXINPUTS| so, dass dieses
Verzeichnis durchsucht wird:
  
Passen sie dazu die Datei |.bashrc| in ihrem Homeverzeichnis
folgendermaßen an:

|    # $TEXINPUTS anpassen                      |
\vspace{-3mm}

|    export TEXINPUTS="$HOME/mytex//::./figures"|

\subsubsection{Konfiguration von \texttt{emacs}}

Das Script |jefflatex| wird benutzt um eine Aufgabendatei (die kein
|\begin{document}| , \ldots enthält) zu \verb|latex|en, \verb|dvips|en
  und mit einem *-ps-Viewer anzuzeigen. Es kann auch PDF-\LaTeX{}
  augerufen, und das Ergebnis mit einem *.pdf-Viewer engezeigt werden.

Damit mit |emacs| und mit |auctex| das Script |jefflatex| aufgerufen werden kann, 
fügen sie Bitte folgende 4 Zeilen zu der |TeX-command-list| in der Datei
|/usr/share/emacs/site-lisp-el/tex-site.el| hinzu:\sloppy

\begin{verbatim}
   (defvar TeX-command-list
   '(
     ;; ...
     ;; existing commands / existierende Befehle
     ;; add the next 4 lines
     ;; All-in-one: latexing, open viewer
         ("All-in-one" "jefflatex --file %s" TeX-run-command nil t)
     ;; All-in-one-PDF: perl-Script, das alles latext und viewer öffnet
         ("All-in-one-PDF" "jefflatex --pdf --file %s" TeX-run-command nil t)
     ;; existing commands / existierende Befehle
     ;; ...
    )
\end{verbatim}

Dies sorgt dafür, dass in \verb|emacs| mit |C-c C-c| die Funktionen
|All-in-one| und |All-in-one-PDF| aufgerufen werden können.

Wenn sie zu diesem Aufruf die Funktionstaste |F5| (PostScript
erzeugen) bzw.  |Shift-F5| (PDF erzeugen) benutzen wollen, dann fügen
sie folgendes in ihre persönliche |.emacs|-Datei hinzu:

\begin{verbatim}
   (defun do-All-in-one ()
     "Startet latex-dvips-Viewer-Vorgang."
     (save-buffer)
     (interactive)
     (TeX-command "All-in-one" 'TeX-master-file)
   )
   (defun do-All-in-one-pdf ()
     "Startet latex-pdf-Viewer-Vorgang."
     (save-buffer)
     (interactive)
     (TeX-command "All-in-one-PDF" 'TeX-master-file)
   )

 to have some keys in LaTeX-Mode only:
   (add-hook 'LaTeX-mode-hook
          '(lambda ()
                   (define-key LaTeX-mode-map [f5] 'do-All-in-one)
                   (define-key LaTeX-mode-map [S-f5] 'do-All-in-one-PDF)
           )
   )

\end{verbatim}

Die Funktionstasten werden nur im |latex-mode| für den Aufruf von |jefflatex| 
benutzt. In anderen Modi können sie somit für andere Aufgaben benutzt werden


\newpage

\part{Die Dokumentklasse \texttt{teacher.cls}}
%\author{Rüdiger Beck}
%\maketitle

\section{Einführung in \texttt{teacher.cls}}

Die Dokumentklasse |teacher.cls| dient dazu, Arbeitsblätter,
Klassenarbeiten, Prüfungen, Aufgabensammlungen, Stoffverteilungspläne
... zu erstellen.  Also alles, was ein Lehrer so an Dokumenten
erstellen muss. Die Dokumentklasse wird aufgerufen mit:

\begin{verbatim}
   \documentclass{teacher}
\end{verbatim}

Eine Aufgabe, wird mit den Befehlen dieser Dokumentklasse formatiert
und in einer separaten Datei abgespeichert. Dann kann die Aufgabe zum
Einen in Aufgabenblättern und dazugehörigen Lösungsblättern verwendet
werden. Zum Anderen kann sie in Klassenarbeiten und Prüfungen
verwendet werden oder in eine umfassende Aufgabensammlung eingebunden
werden.

Für die Erstellung typischer Aufgaben sind \LaTeX - Befehle vorhanden,
die eine einfache Formatierung der Aufgaben ermöglichen, sowie das
Zusammenzählen von Punkten, Ein- und Ausblenden der Lösungen, usw.
ermöglichen.

\section{Die Argumente der Dokumentklasse \texttt{teacher}}

\subsection{Argumente zur Festlegung des Dokumenttyps}

Von zentraler Bedeutung sind die Argumente, die es erlauben je nach
Dokumenttyp (Klassenarbeit, Prüfung, Arbeitsblatt, ..) Teile der
Aufgaben zu verbergen.

Wenn keine dieser Argumente angegeben werden, so wird möglichst
\textit{alles} angezeigt.

Folgende Teile einer Aufgabe sind einblend- bzw. ausblendbar:

\begin{description}
\item [Datei-/Versionsinfo]
  Dateiname (ohne \texttt{.tex}-Erweiterung) sowie CVS-Versions\-nummer
   \item [Aufgabenstellung] Die Aufgabe.
   \item [Lösungsbereiche]  Lösungslinien bzw. Lösungskaros, in die die
     Schüler ihre Lösungen eintragen können.
   \item [Korrekturhilfen] Punktzahlkasten zum eintragen der Punkte mit Fachangabe
   \item [Gruppeninfo] Gruppenversion (A,B oder C) der Aufgabe an.
   \item [Projektinfo] Information ob Projektversion oder die
     Nicht-Projektversion angezeigt wird.
   \item [Lösung auf Linien] Lösung auf dem Lösungsbereich anzeigen.
   \item[Lösung (alleine)] Nur die Lösung anzeigen. Die
     Aufgabenstellung wird nicht gezeigt.
   \item[Aufgaben-Fußzeile] Zustzinformationen nach der Aufgabe
     zeigen: Existierende Gruppenversionen, Gesamtpunktzahl.
\end{description}

Am Ende eines Dokuments können folgende Informationen gezeigt werden:


\begin{description}
   \item [Notenliste] Eine Liste mit Punkten und entsprechenden Noten. 
   \item [Notenkasten] Ein Bereich em Ende eines Dokuments, in dem Die
     erreichte Punktzahl und Note eingetragen wird.
\end{description}



Hier die Dokumenttyp-Argumente im Überblick:

\newcommand{\headrotate}[1]{\makebox[3mm][c]{\begin{rotate}{60}#1\end{rotate}}}

\begin{table}
  \caption{\label{documenttype-arg} 
   Dokumenttyp-Argumente der Dokumentklasse \texttt{teacher}}
\begin{tabular}{|l|*9{c}*4{c}|} \hline
\rule{0mm}{29mm}& 
\headrotate{Datei-/Versionsinfo}&
\headrotate{Aufgabenstellung}&
\headrotate{Lösungsbereiche}&
\headrotate{Korrekturhilfen}&
\headrotate{Gruppeninfo}&
\headrotate{Projektinfo}&
\headrotate{Lösung auf Linien}&
\headrotate{Lösung (alleine)}&
\headrotate{Aufgaben-Fußzeile}&
\makebox[0mm][c]{\begin{rotate}{60}\tiny\rule{32mm}{0.1mm}\end{rotate}}&
\headrotate{Notenliste}&
\headrotate{Notenkasten}&
\rule{3mm}{0mm}
\tabularnewline \hline\hline

\rule{0mm}{4mm}\bf ohne Argumente &&&&&&&&&&&&& \tabularnewline
\texttt{[]}& x & x & x & x & x & x & x & & x &&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf nur Aufgaben &&&&&&&&&&&&& \tabularnewline
\texttt{col}    && x &&&&&&&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf nur Lösungen &&&&&&&&&&&&& \tabularnewline
\texttt{lsg}    & x &&&& x & x & x & x &&&&& \tabularnewline 
\texttt{slsg}   &   &&&&&&x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Arbeitsblätter &&&&&&&&&&&&& \tabularnewline 
\texttt{arb}    & & x & x &&&&&&&&&& \tabularnewline 
\texttt{arblsg} & x & x & x &&&& x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Prüfungen&&&&&&&&&&&&& \tabularnewline 
\texttt{exam}   & & x & x &&&&&&&&&& \tabularnewline 
\texttt{examlsg}& x & x & x &&&& x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Klassenarbeiten &&&&&&&&&&&&& \tabularnewline
\texttt{ka}     & & x & x & x &&&&&&& x & x & \tabularnewline 
\texttt{kalsg}  & x & x & x & x &&& x &&&& x & x & \tabularnewline 
\texttt{kamulti} && x & x & x &&&&&&& x & x & \tabularnewline 
\texttt{kamultilsg} & x & x & x & x &&& x &&&& x & x & \tabularnewline \hline
\end{tabular}
\end{table}

\subsubsection{Erläuterung der Argumente des Dokumenttyps}

Von den folgenden Argumenten (siehe Tabelle \ref{documenttype-arg},
Seite \pageref{documenttype-arg}) ist \textit{nur eines} zu wählen, da
sie sich gegenseitig ausschließen.

\DescribeMacro{[]} Ohne Argumente werden möglichst alle Teile der
Aufgabe angezeigt.

\DescribeMacro{col} Mit dem Argument |col| wird eine Aufgabensammlung
(Collection) ausgegeben, in der nur die Aufgaben sichtbar sind.

\DescribeMacro{lsg} Mit dem Argument |lsg| werden nur die Lösungen
angezeigt. Somit kann ein Lösungsblatt erstellt werden. Da Dateinamen,
Gruppeninformationen ebenfalls angezeigt werden, ist dieses
Lösungblatt für Lehrer passend.

\DescribeMacro{slsg} Mit der Argument |slsg| (Schüler-Lösungen) werden
nur die Lösungen angezeigt. Auf dem Lösungsblatt sind alle für Schüler
wichtigen Informationen vorhanden.

\DescribeMacro{arb} Sollen keine Korrekturinformationen angezeigt
werden,wird das Argument |arb| verwendet (Arbeitsblatt). Lösungslinien
und Lösungskaros werden jedoch angezeigt.

\DescribeMacro{arblsg} wie |arb| jedoch mit Lösungen auf den Linien.
So kann man ein ausgefülltes Arbeitsblatt erstellen. Dazu müssen bei
der Lösungsangabe allerdings bestimmte Anforderungen erfüllt werden
(siehe Seite \pageref{loesungen}\pageref{arblsg}).

\DescribeMacro{exam} Für Prüfungen. Bislang identisch mit dem
Argument |arb|.

\DescribeMacro{examlsg} Bislang identisch mit dem Argument |arblsg|.


\DescribeMacro{ka} Mit dem Argument |ka| werden die Aufgaben so
formatiert, dass sie in Klassenarbeiten verwendet werden können. Es
werden Lösungslinien erzeugt, erreichbare Punktzahlen angegeben und
ein Punktzahlkasten erzeugt, in dem der korrigierende Lehrer die
erreichte Punktzahl von Hand eintragen kann.

Am Ende Der Klassenarbeit wird ein Bereich ausgedruckt, in dem die
Punkte zusammengezählt werden und die Noten angegeben werden können.

\DescribeMacro{kalsg} wie |ka| jedoch mit Lösungen auf den Linien. 

\DescribeMacro{kamulti}\label{kamulti}Ebenfalls für Klassenarbeiten
ist die Argument |kamulti| geeignet. Die Punkte werden getrennt nach
Fächern aufsummiert. Somit können in \textit{einer} Klassenarbeit
Noten für \textit{mehrere Fächer} vergeben werden. Um die Schüler zu
informieren zu welchem Fach welche Teilaufgabe zählt, werden neben dem
Punktzahlkasten ein Kürzel für das Fach angegeben (z.B. \textbf{M} für
Mathe)

\DescribeMacro{kamultilsg} wie |kamulti| jedoch mit Lösungen auf den Linien. 


\subsubsection{Dokumenttyp im Dokument wechseln}

Soll innerhalb eines Dokuments der Dokumenttyp gewechselt werden
stehen folgende Befehle zur Verfügung:

Der Befehl |\kamulti| wechselt zum Dokumenttyp |kamulti|. Mit
|\arblsg| wechselt man zum Dokumenttyp |arblsg|, \ldots usw.

Der Dokumenttyp kann nur \textit{zwischen} 2 Aufgaben gewechselt
werden. Deshalb müssen die Befehle auch \textit{zwischen} 2 Aufgaben stehen.

\subsection{Allgemeine Argumente}

Folgende Argumenten können \textit{zusätzlich} zum Dokumenttyp angegeben werden.

\DescribeMacro{sw} Will man auf einem Schwarz-Weiss Drucker
ausdrucken, sollte man das Argument |sw| einschalten. Dann wird farbige
Schrift Schwarz ausgedruckt. 

Auf einzubindende Grafiken hat die Argument allerdings keinen
Einfluss. Sie werden immer noch in ihren Originalfarben ausgedruckt.
Mit einem Schwarzweissdrucker also in Graustufen.

\DescribeMacro{arial} Diese Argument stellt fast alle Schriftarten auf
eine Arial-ähnliche Schrift um. Die Dokumente sehen dann in etwa so
aus, als ob sie mit einem stinknormalem
WYSIWIG-Textverarbeitungsprogramm erzeugt wurden. Sinvoll nur für den,
der so tun muss als würde er nicht mit \LaTeX{} arbeiten, sondern mit
W\ldots.

\DescribeMacro{debug} Mit dem Argument |debug| werden zusätzliche
Informationen eingeblendet. So kann im formatierten Dokument z.B.
erkannt werden, dass die Angabe des Schulnamens mit dem Befehl
|\School{}| geschieht.

Außerdem werden bei Grafiken, die mit |\includepsfraggraphics|
eingebunden werden, die Namen der Tags gezeigt und \textit{nicht}
ersetzt.

\DescribeMacro{frame} Wenn dies von dem verwendeten Layout unterstützt
wird (Standardlayout, \texttt{bszleo}), kann mit dieser Argument ein
Rahmen um das Blatt eingeblendet werden.

\subsection{Argumente zum erstellen von A\,5-Blättern}

\DescribeMacro{a5landscape} Mit dem Argument |a5landscape| wird ein
DIN\,A\,4 Blatt im Hochformat mit zwei \textit{aufeinanderfolgenden} DIN
A\,5-Blättern Querformat (Engl.  landscape) beschrieben.

\DescribeMacro{a5landscaperepeat} Für das Ausdrucken/Kopieren unter
Streß ist es oft wünschenswert, dass z.B. auf Seite 1 des DIN\,A\,4
Blatts \textit{zweimal dasselbe} DIN\,A\,5 Blatt zu sehen ist. 

Dieses DIN\,A\,4 Blatt braucht man nur auzudrucken, mittig zu
halbieren und die beiden entstehenden Stapel aufeinanderzulegen, da
sie ja aus den identischen DIN\,A\,5 Blättern aufgebaut sind.



\subsubsection{Bemerkungen zu den A\,5-Argumente}

Wenn sie die mit diesen Argumenten erzeugten \texttt{*.tex}-Datei mit
dem Befehl \texttt{latex} bzw. \texttt{pdflatex} (\texttt{emacs}: Tastenkombination
\texttt{shift-F5}) verarbeiten, dann bleibt allerdings die untere
Hälfte des DIN\,A\,4-Blattes leer.


Um das oben beschriebene Resultat zu erzielen, muss die
\texttt{*.tex}-Datei mit \texttt{jefflatex} verarbeitet werden. Dies
geschieht, wenn sie z.B.  mit \texttt{emacs} die Taste F5 benutzen
oder mit folgendem Befehl übersetzt wird:

\begin{verbatim}
   jefflatex -f datei.tex
\end{verbatim}

\texttt{jefflatex} ermitelt die zusätzlichen Argumente in der
\texttt{*.tex}-Datei und stellt dann mit \texttt{pstops} die
PostScript-Datei neu zusammen. Die direkte Erzeugung von
\texttt{*.pdf} ist nicht möglich. Um \texttt{*.pdf} zu erhalten muss
mit \texttt{ps2pdf} das mit \texttt{jefflatex} erzeugte PostScript
nach \texttt{*.pdf} konvertiert werden.


\subsection{Seitenlayout festlegen (Kopf- und Fußzeilen)}

Ohne Angabe eines Arguments für das Seitenlayout ist das Seitenayout so
festgelegt, dass wichtige Informationen (Schulname, Lehrerkürzel,
Seitennummer, Dateiname, Versionsnummer und Ausdruckdatum) in der
Kopfzeile bzw. der Fusszeile angezeigt werden können.

Wenn sie ein anderes Seitenlayout wählen wollen, stehen ihnen folgende
vorgefertigte Seitenlayouts zur Verfügung:

\begin{itemize}
\item \DescribeMacro{empty} Mit |empty| erhält man leere Kopf- oder
  Fußzeilen.
\item \DescribeMacro{simple} zeigt nur die Seitenzahl in der
  Fußzeile.(TODO ?????)
\item \DescribeMacro{grundschule} Mit dem Argument |grundschule| wird
  ein einfaches, schulneutrales Seitenlayout eingestellt, auf dem die
  Schüler oben ihren Namen eintragen können.
\item \DescribeMacro{bszleo} Das Argument |bszleo| erzeugt eine
  Formatierung, wie ich sie selbst am Beruflichen Schulzentrum
  Leonberg verwende. 
  
  Wenn sie sehen wollen, wie bei mir ein Arbeitsblatt bzw.
  Klassenarbeit für die Schüler aussieht so geben sie
  \verb|[bszleo,kamulti]| als Argumente an.
\item \DescribeMacro{bszleoexam} Mit |bszleoexam| wird ein
  Seitenlayout erzeugt, wie es in den Prüfungen für den Beruf des
  Kälteanlagenbauers am Beruflichen Schulzentrum Leonberg verwendet
  wird. Hier ist ein Deckblatt mit Inhaltsverzeichnis erforderlich,
  und auf den folgenden Seiten erscheint der Prüfungskopf.
  
  Wenn sie sehen wollen, wie an unserer Schule eine Prüfung
  aussieht, so geben sie |[bszleoexam,exam]| als Argumente an.
\end{itemize}




Soll ein Dokument von diesen mitgelieferten Seitenlayouts abweichen,
so gibt es 2 Möglichkeiten:

\begin{enumerate}
\item Sie nutzen das Argument |empty|. Dann werden keinerlei Kopf-
  oder Fußzeilen ausgegeben. Mit ihrem
  Lieblings-WYSYWIG-Textverarbeitungs-Programm bedrucken sie dann
  diese Seiten nochmals, oder schnibbeln mit der Schere eigene Kopf-
  und Fußzeilen, die dann vor dem Gang zum Kopierer aufkleben.
\item Sie erstellen sich ein eigenes, an ihre Schule angepasstes Layout mit \LaTeX.
\end{enumerate}

Wenn sie die letztere Möglichkeit bevorzugen, also ein komfortables
Arbeiten gewohnt sind, dann lesen Sie weiter.

\subsubsection{Eigenes Layout erstellen}


Wenn sie in den optionalen Argumenten der Dokumentklasse |teacher|
ein nicht bekanntes Argument, wie zum Beispiel |myschool| angeben,
dann sucht \LaTeX{} nach folgenden Dateien:

\begin{itemize}
\item |myschool-aeoc.tex| --- aeoc = At end of Class
\item |myschool-abd.tex| --- abd = At Begin Document
\item |myschool-aed.tex| --- aed = At End Document
\end{itemize}

Werden diese Dateien gefunden, so werden die darin enthaltenen
Befehle, Zählereinstellungen, Kopfzeileneinstellungen, \ldots zum
angegeben Zeitpunkt geladen.

Beispiel: 

Sie wollen zu Beginn der Klassenarbeit Viel Glück wünschen.  Dann
schreiben sie in \verb|myschool-abd.tex| die Worte: 

\verb|   Viel Glück bei der Klassenarbeit|.

Die jeweils 3 Dateien der Seitenlayout-Argumente \verb|bszleo|,
\verb|bszleoexam| und |grundschule| sind mit Kommentaren versehen, und
können somit als Ausgangspunkt für die eigene Layouts dienen.

\subsubsection{Textfelder in eignen Layouts}

Beim Erstellen von Vorlagen können die im nächsten Kapitel angegebenen
Felder benutzt werden. So kann z.B mit \verb|\Quelle{Text}| eine
Quellenangabe angegeben werden. 

In der Vorlage kann dann an der gewünschten Stelle mit
\verb|\quelleuse{}| dieser Abgespeichere Text eingesetzt werden.

Ebenso kann auf alle anderen Texte zugegriffen werden.

\subsection{Sonstige Argumente}

\DescribeMacro{stoff} Für Stoffverteilungspläne gibt es die Argument
|stoff|, die nur alleine verwendet werden sollte. Gemeinsam mit den
vorigen Argumenten ergibt sich kein Sinn.

Für die zur Verfügung gestellten Befehle siehe Seite
\pageref{stoffbefehle}


\section{Ausfüllen des Arbeitsblatt- bzw. Klassenarbeit-Kopfes im
  Seitenlayout}

\label{kopfbefehle} Je nach verwendetem Seitenlayout werden an
vordefinierten Stellen der mit \verb|teacher.cls| erstellten Dokumente
Textfelder verwendet. Mit bestimmten Befehlen kann diesen Textfeldern
eine Inhalt zugewiesen werden.

Für eine Übersicht der in einer Vorlage eingebauten Textfelder können
sie das Argument \verb|debug| mit angeben. Dann wird anstelle des
Inhalts eines Textfelds der Befehl in rot ausgegeben, mit dem
das Texfeld mit Inhalt gefüllt werden kann.

Im folgenden werden die Befehle zum füllen der Textfelder mit Inhalt
beschrieben:

\subsection{Befehle für Arbeitsblätter}

\DescribeMacro{\School\{\}} Enthält den Schulnamen.

\DescribeMacro{\UserToken\{\}} Wird zum setzen des Lehrerkürzels benutzt.

\DescribeMacro{\Titelo\{\}} Gibt den Inhalt der oberen/ersten
Titelzeile des Arbeitsblattes bzw. der Klassenarbeit an.


\DescribeMacro{\Titelu\{\}} Gibt den Inhalt der unteren/zweiten Titelzeile des
Arbeitsblattes bzw. der Klassenarbeit an.

\DescribeMacro{\Fach\{\}} Damit wird ein Fach festgelegt, dem
dieses Dokument zugeordnet werden kann.

\DescribeMacro{\Datum\{\}} Gibt das Datum an.

\DescribeMacro{\Quelle\{\}} Gibt die Quelle an. Sie steht je nach
Seitenlayout an verschiedenen Stellen.  Beim Arbeitsblatt mit Rahmen z.
B. in der linken unteren Ecke des Rahmens.

\DescribeMacro{\Ausdruck\{\}} Gibt bei leerem Argument das
Ausdruck-Datum und das Lehrerkürzel aus. Wird ein Argument angegeben,
so wird dieses ausgegeben.

\DescribeMacro{\Revision\{\}} Gibt bei leerem Argument den Dateinamen
und die CVS-Revisionsnummer an (falls vorhanden). Wird ein Argument
angegeben, so wird dieses ausgegeben.

Für die Ausgabe der CVS-Versionsnummer von Aufgaben-Dateien wird
folgende Zeile an den Anfang der Aufgaben-Datei gestellt (vor
|\begin{aufgabe}| ):
\begin{verbatim}
   \documentclass{teacher}
   \RCS $Revision$ 
\end{verbatim}

  Der Inhalt von \verb|$Revision$| wird von CVS automatisch bei jeder
  Änderung gepached (verändert).

\DescribeMacro{\Entwurf\{\}} Markiert das ganze Dokument als Entwurf
(Graue Schrift \verb|Entwurf| im Hintergrund einer Seite). Außerdem
wird die CVS-Revisionsnummer (falls vorhanden) und das Datum
ausgegeben.

Wird ein Argument angegeben, so wird anstelle von \verb|Entwurf| das
Argument ausgegeben. Mit dem optionalen Argument kann die Größe
dieser Hintergrundschrift angegeben werden.

Um den Text zu sehen, muss nach PostScript konvertiert werden (In
\verb|*.dvi| ist die Hintergrundschrift unsichtbar).

\DescribeMacro{\Klasse\{\}} Angabe der Klasse.

\DescribeMacro{\Blatt\{\}} Gibt die aktuelle Seitenzahl aus (leeres
Argument). Wenn ein Argument angegeben wird, so wird dieses
ausgegeben.

\DescribeMacro{\Name\{\}} Gibt den Schülernamen an.

\subsection{Befehle für Klassenarbeiten}

\DescribeMacro{\Fehler} Ändert das Wort \texttt{Fehler} im Notenkasten
der Klassenarbeit um. Beispiel: |\Fehler{Punkte:}|

\DescribeMacro{\Muendlich} Wie bei |\Fehler|

\subsection{Prüfungsdauer (nur bei \texttt{bszleoexam})}

Folgende Optionen sind bei |bszleoexam| zwingend erforderlich:

\DescribeMacro{\APtime} Prüfungsdauer im Fach Arbeitsplanung.

\DescribeMacro{\Ttime} Prüfungsdauer im Fach Technologie.

\DescribeMacro{\Mtime} Prüfungsdauer im Fach Mathematik.

\DescribeMacro{\Totaltime} Gesamt-Prüfungsdauer.

\subsection{Benutzerdefinierte Einstellungen}

Jeder Bearbeitungsvorgang sucht im Homeverzeichnis des aufrufenden
Users nach der Datei |.problectix/problectix.tex| und führt die darin
enthaltenen \LaTeX-Befehle aus. 

Steht in dieser Datei z. B. |\UserToken{jeffbeck}|, erscheint an den
entsprechenden Stellen der Vorlage |jeffbeck| (Wenn die Einstellung
nicht nach |\begin{document}| im zu bearbeitenden Dokument
  überschrieben wird).




\section{Erstellen von Aufgaben}


\subsection{Dateinamen --- Konventionen}

Jede Aufgabe wird in einer Datei abgelegt. Diese Datei wird in ein passendes
Verzeichnis abgelegt, um die Übersichtlichkeit zu bewahren. 

Z. B.  in |mytex/aufgaben-kb/3-lehrjahr/Verdichter/|

Konventionen für die Dateinamen:

\begin{itemize}
 \item Dateinamen beginnen mit Großbuchstaben.
 \item Die Dateinamen sollten aussagekräftig sein, und ein Gebiet
   umfassen (Verdichter, Regelkreis, Verflüssiger, \ldots )
 \item Nach dem Dateinamen sollte das Fach in Kurzform vermerkt sein, dem die
   \textit{gesamte} Aufgabe zugeordnet ist.
 \item Die einzelnen Aufgaben eines Gebietes werden mit einer
   dreistelligen Nummer versehen.
 \item Aufgaben, die in leicht veränderter Form in einer Prüfung
   verwendet wurden, sind mit dem Zusatz |-pr| versehen.
 \item Beinhaltet eine Aufgabe ein |*.eps|-Datei so ist
   derselbe Name zu wählen. 
 \end{itemize}

 \vspace{3mm}

 Beispiele für Dateinamen:
\begin{itemize}

  \item |Verdichter-m-001.tex| 

     mit den Grafiken
     \begin{itemize}
     \item |Verdichter-m-001a.eps|
     \item |Verdichter-m-001b.eps|
     \end{itemize}

  \item  |Regelkreis-t-002.tex| mit |Regelkreis-t-002.eps|

  \item |Regelkreis-m-002-pr.tex| 
\end{itemize}



\subsection{Erstellen der Aufgabenstellung}

Jede Aufgabe wird in einer Datei abgespeichert. Diese Datei muss
folgendermaßen aufgebaut sein:

|    \begin{aufgabe}[Fach]{Aufgabentitel}| \newline
|       \begin{textonly}                        %%optional        | \newline
|          ... %% Text vor den Teilaufgaben     %%optional        | \newline
|       \begin{textonly}                        %%optional        | \newline
|       \begin{teilaufgabe}[ohnenummer]{Teilaufgabenfach}{Linienzahl}{Punkte}|\newline 
|           Teilaufgabentext                                      | \newline
|           ...                                                   | \newline
|           \korrektur{Länge}...                 %% optional      | \newline
|       \end{teilaufgabe}                                         | \newline
|       \begin{loesung}                         %%optional        | \newline
|          \punkte{Richtige Antwort zu 1}       %%optional        | \newline
|                 {Punkteanzahl zu 1}           %%optional        | \newline
|                 {Kommentar zu 1}              %%optional        | \newline
|          \punkte{Richtige Antwort zu 1}       %%optional        | \newline
|                 {Punkteanzahl zu 2}           %%optional        | \newline
|                 {Kommentar zu 2}              %%optional        | \newline
|       \end{loesung}                           %%optional        | \newline
|    \end{aufgabe}                                                | \newline

Die verwendeten Umgebungen und ihre Argumente werden im folgenden erläutert.


\DescribeEnv{aufgabe} Die Umgebung |aufgabe| beinhaltet die
\textit{gesamte} Aufgabe. Sie erstellt Kopf- und Fußzeile.  Das
optionale Argument |Fach| ordnet der \textit{gesamten} Aufgabe ein
Fach zu. Dieses Fach hat im weiteren keine Bedeutung mehr. Bei
Fächerübergreifenden Aufgaben dient |Fach| als Orientierung für den
Schwerpunkt der Aufgabe.

Das Argument |Aufgabentitel| gibt jeder Aufgabe eine Überschrift, die
deren Inhalt kurz umreißt. Sie sollte knapp gewählt werden, da kein
Zeilenumbruch vorgesehen ist (z.B. \verb|Verdichterberechnung|).

\DescribeEnv{teilaufgabe}
Die Umgebung |teilaufgabe| umschließt die Aufgabenstellung einer Teilaufgabe. 
Das optionale Argument |ohnenummer| bzw. |o| sorgt dafür, dass Teilaufgaben keine
Nummerierung erhalten. Dies ist notwendig, wenn die Aufgabe nur eine
Teilaufgabe enthält.

Das Argument |Teilaufgabenfach| ordnet jede Teilaufgabe einem Fach
zu. Mögliche Werte für |Teilaufgabenfach| sind |T|, |t|, |AP|, |ap|,
|Ap|, |M|, |m|

Je nach Art des Faches werden karierte (|M|) oder linierte
Lösungsbereiche(|T|,|AP|) gesetzt.\DescribeMacro{kariert}
\DescribeMacro{liniert} Mit |kariert| bzw. |liniert| wird innerhalb
der Umgebung |teilaufgabe| die Linienart verändert.



Durch die Angabe von |Teilaufgabenfach| können bei Klassenarbeiten die
mehrere Fächer beinhalten (Fächerverbindenden Klassenarbeiten) Punkte
nach Fächern getrennt aufaddiert werden, wenn eines der Argumente
|arblsg|, |examlsg|, |kalsg| oder |kamultilsg| (Siehe Seite
\pageref{arblsg}) verwendet wird.
 
Das Argument |Linienzahl| gibt an wieviele Lösungslinien erscheinen
sollen. Wurde als Fach Mathe angegeben, wird statt den Lösungslinien
ein kariertes Feld ausgegeben. Das Argument |Linienzahl| gibt dann
die Höhe des Felden in Kästchen an.
 
Ist die |Linienzahl| null, dann erscheint ein Punktzahlkasten 
ohne Lösungslinien.

Das Argument |Punkte| gibt an, wieviele Punkte in dieser Teilaufgabe erreicht
werden können. Diese Punktzahl erscheint neben dem Punktzahlkasten. 

\subsubsection{Normaler Text in einer Aufgabe}

\DescribeEnv{textonly} Mit der Umgebung |textonly| wird ein Textblock
innerhalb einer Aufgabe erzeugt.  Der Textblock hat keine
Nummerierung, keine Maximalpunktzahl und keinerlei Lösungslinien.
Intern werdern die Textblöcke einer Aufgabe jedoch mit negativen
Zahlen durchnummeriert. Mit \verb|\ohne[-1][2]{-4}| werden der erste
Textblock(-1), die zweite Teilaufgabe (2) und der vierte Textblock
(-4) verborgen.

Zu beachten ist, dass jeglicher Text der Aufgabenstellung entweder in
der |\textonly|-Umgebung oder in der |teilaufgabe|-Umgebung steht. Nur
so kann bei einem Lösungsblatt die Aufgabenstellung vollständig
ausgeblendet werden.


\subsubsection{Ganzseitige Grafiken im Anhang}

Bei vielen Aufgaben sind Grafiken erforderlich, die über eine ganze
Seite gehen. (Für kleine Grafiken siehe Seite \pageref{grafiken}.)

\DescribeMacro{anhang} Diese ganzseitigen Grafiken können als Anhang
an das eigentliche Dokument (Arbeitsblatt, Klassenarbeit, Prüfung)
angehängt werden. An der Stelle in einer Teilaufgabe an der auf die
Grafik im Anhang verwiesen werden soll, steht der Befehl:

|     \anhang[graphicx-argument]{Beschreibung}{Dateiname}|

Das Argment |Dateiname| gibt an, in welcher Datei sich die
|*.eps|-Grafik befindet. 

Mit der |Beschreibung| wird der Inhalt der Grafik näher beschrieben.
Die |Beschreibung| findet man auf der Anhangseite unten links in der
Fusszeile wieder. Benutzt man ein Layout, das eine Inhaltsangabe
erzeugt (z.B. |bszleoexam|), so erscheint die Anhangseite mit ihrer
Seitenzahl im Inhaltsverzeichnis.

Die erste Angangseite bekommt den Titel \textbf{Anhang A}, die zweite
Anhangseite \textbf{Anhang B}, usw. 

Mit dem optionalen Argument |graphicx-argument| können an das
|graphicx|-Paket Argumente übergeben werden.  Ohne diese Angaben,
werden die Grafiken im Anhang auf die maximale Größe skaliert, wobei
der Vergrößerungsfaktor in x und y-Richtung konstant ist.

Überlegenswert als |graphicx-argument| ist z.B. |width=120mm|.Damit
wird die Breite der Grafik auf 120mm festgelegt. Für die
kompletten Möglichkeiten lesen sie bitte die Dokumentation zum Paket
|graphicx.sty|.


\subsection{Abgleichen des Aufgabenendes}

In seltenen Fällen ist ein manueller Abgleich des Aufgabenendes erforderlich.

Wird in einer Aufgabe ohne abschließende Lösungslinien am Ende der
Aufgabenstellung eine Grafik verwendet, dann sollte der Rand der
Grafik mit der Unterkante des Punktzahlkastens fluchten. Besitzt die Grafik
einen weißen Rand, so entsteht ein \textit{flatterndes
  Teilaufgabenende}.

Um Platz zu sparen und zwischen den Teilaufgaben bzw. Aufgaben einen
einheitlich breiten \textit{whitespace} zu erhalten sollten diese
flatternden Aufgabenenden \textit{manuell} abgeglichen werden.

Dieser Abgleich geschieht folgendermaßen:
\begin{enumerate}
\item In der Dokumentklasse |teacher| wird das Argument |debug| genutzt.
  Diese Option sorgt unter anderem dafür, dass an der Unterkante eines
  jeden Punktzahlkastens eine schmale, horizontale Linie erscheint.
  Diese hat im linken Randbereich die rote Kennzeichnung \texttt{DEBUG},
  und 2 Abstandsmessskalen mit Linien im Millimeterabstand wie auf
  zwei senkrecht angelegten Linealen.
   \item Im erzeugten Postscript-File kann nun abgelesen werden, um wieviele mm der
     Aufgabenkasten nach oben (Regelfall) oder nach unten verschoben werden muss,
     um mit der Aufgabenunterkante zu fluchten.
   \item \sloppy Mit dem Befehl |\korrektur{längenangabe}| wird die Korrektur 
     als letztes
     vor dem Beenden der |teilaufgabe|-Umgebung (|\end{teilaufgabe}|)eingetragen.
     Der Befehl |\korrektur{längenangabe}| ruft lediglich den Befehl
     |\vspace{längenangabe}| auf. Ein neuer Befehl wurde deshalb definiert um
     \textit{nachträglich} in jeder Aufgabe noch Befehle nachtragen zu können, 
     falls dies erforderlich wird.
 \end{enumerate}




\subsection{Erstellen der Lösungen}



\subsubsection{Endergebnisse/Kurzlösungen}


Lösungen erscheinen im Ausdruck bei Verwendung von |arblsg|, |examlsg|, |kalsg|
oder |kamultilsg| in den Lösungsbereichen in grüner Schrift.

Bei Verwendung von |lsg| oder |slsg| erscheinen Sie schwarz (Nur Lösungen).

\label{loesungen} ????? Die Lösungs-Umgebung darf nicht weggelassen
werden, sonst werden keine Lösungslinien erzeugt.en (d.h. die gesamte
|loesung|-Umgebung) können auch weggelassen werden. Damit können
selbstverständlich auch keine Lösungen eingeblendet werden.

\DescribeEnv{loesung}
Innerhalb der Umgebung |loesung| wird die Lösung eingegeben. Sie zählt zur
vorherigen Teilaufgabe. 

\DescribeMacro{punkte} Der Befehl |punkte| darf nur innerhalb der
|loesung|-Umgebung verwendet werden und hat 3 Argumente:

\begin{verbatim}
   \punkte{Richtige Antwort}{Punkte}{Kommentar}
\end{verbatim}

Das Argument |Richtige Antwort| ist der Lösungsvorschlag.
 
Das Argument |Punkte| gibt die Punktzahl an, die für |Richtige Antwort| 
vergeben wird. Diese Punktzahl wird \textit{nicht} weiterverwendet für
ausfummierungen usw.

Das Argument |Kommentar| hat die Aufgabe für den Lehrer beim korrigieren
zusätzliche Informationen zur Verfügung zu stellen. Z.B. \ldots zählt nur einen
halben Punkt \ldots .

Wenn Linien als Lösungsbereiche verwendet werden, beschreibt
\textit{ein} |punkte|-Befehl \textit{eine} Lösungslinie. Am Ende des
Befehls folgt ein Zeilenumbruch. 

Werden Karos als Lösungsbereiche verwendet, dann werden die 
|Richtige Antwort|en der |punkte|-Befehle \textit{ohne} Zeilenumbruch
aneinandergehängt. Soll ein Zeilenumbruch erscheinen, muss am Ende des
|punkte|-Befehls \LaTeX -Umbruchbefehl |\par| stehen:

\begin{verbatim}
   \punkte{Richtige Antwort}{2}{}\par
\end{verbatim}

????????? Stimmt das so?


Standardmäßig wird beim Erstellen der Lösung nach einem Punktebefehl
\textit{keine} neue Zeile begonnen. Ist dies erwünscht, dann muss nach
einem |\punkte{}{}{}|-Befehl der \LaTeX-Befehl |\par| stehen.


\subsubsection{Musterlösungen/ausführliche Lösungen}

Bei der Verwendung von Karos als Lösungsbereich kann zusätzlich zum
(kurzen) Endergebnis eine ausführliche Musterlösung in der farbe lila
angegeben werden.

Das grüne Endergebnis füllt den Lösungsbereich von unten her auf, die lila 
Müsterlösung (der Lösungsweg) füllt von oben her auf. 


\section{Erstellen einer Klassenarbeit aus Aufgaben}

\subsection{Klassenarbeits-Datei}

Die Grundstruktur einer Klassenarbeits-Datei sieht folgendermaßen aus:

|    \documentclass[11pt,ka]{teacher}| \newline
|       \Titelu{Klassenarbeitstitel}| \newline
|       \School{Klassenarbeitstitel}| \newline
|       \UserToken{Klassenarbeitstitel}| \newline
|       \Fach{m}| \newline
|       \gruppea| \newline
|    \begin{document}| \newline
|       \nehme{aufgabe-1}| \newline
|       \nehme{aufgabe-2}| \newline
|       \nehme{aufgabe-3}| \newline
|       \ohne[-1][2]{1}| \newline
|       \nehme{aufgabe-4}| \newline
|    \end{document}| \newline




In der oberen Titelzeile steht bei Verwendung von |ka|, |kalsg|,
kamulti| bzw. kamultilsg|, ||die Angabe \glqq Klassenarbeit\grqq.
Dieser Inhalt kann mit dem Befehl |\Titelo{Text}| durch |Text| ersetzt
werden. Die untere Titelzeile kann mit |\Titelu{text}| angegeben
werden.

Für weitere sinnvolle Angaben siehe Seite \pageref{kopfbefehle} ff.

\subsection{Einfügen von Aufgaben}

\DescribeMacro{nehme} Um eine in einer Datei abgespeicherte Aufgabe in
eine Klassenarbeit (Prüfung, Arbeitsblatt, \ldots) einzubinden wird der Befehl

|     \nehme[option]{Dateiname}|

verwendet. 

Um den \LaTeX -Quellcode der Datei |Dateiname| einzufügen, wird
anstelle von |option| der Wert |quellcode| angegeben.

Mit der Option |[beispiel]| wird eine Aufgabe ausgegeben \textit{und} deren
Quellcode angefügt.

\DescribeMacro{nehmealle}
Bei Aufgaben, innerhalb derer mit |\ab{...}| - und |\abc{...}| -
Befehlen veschiedene Gruppen definiert wurden, können \textit{alle} Gruppen
nacheinander angezeigt werden, wenn sie mit dem Befehl

|    \nehmealle{Dateiname}|

Die Stellen, an denen sich die A, B und C-Version unterscheiden sind farblich
hervorgehoben

\DescribeMacro{allealle}
Für eine \textit{Aufgabensammlung} ist im Vorspann der Befehl

|    \allealle|

sehr nützlich. Es definiert den Befehl |\nehme{Dateiname}| in den Befehl
|\nehmealle{Dateiname}| um. So kann von \textit{nur eine Gruppe anzeigen}
(Standardeinstellung) auf \textit{alle erzeugten Gruppen aller Aufgaben zeigen}
umgestellt werden. Der Umfang und die Rechenzeit für die Aufgabensammlung kann
sich dabei natürlich vervielfachen (max. 3\,x).

\subsection{Modifizieren schon vorhandener Aufgaben}

Wenn man Aufgaben aus einer Datenbank benutzt, kann man sie mit
folgenden Befehlen modifizieren.

\DescribeMacro{ohne}Das Unterdrücken von Teilaufgaben erfolgt mit dem
Befehl:

|    \ohne[Teilaufgabe][Teilaufgabe]{Teilaufgabe}|

Als Argument |Teilaufgabe| können positive Werte stehen. Dann wird die
entsprechende Teilaufgabe weggelassen. 

Verwendet man als Argument für |Teilaufgabe| einen negativen Wert, werden die
durch die Umgebung |textonly| erzeugten Textblöcke weggelassen.

Der Befehl |\ohne| kann nur \textit{einmal} vor jeder Aufgabe verwendet werden.


\section{Klassenarbeiten mit mehreren Gruppen bzw. Projektbezug}


\subsection{Unterschiedliche Aufgabenvarianten (A,B,C)}

\DescribeMacro{ab}Um aus einer Aufgabe mehrere Varianten zu erzeugen,
gibt es die beiden Befehle

|   \ab{Text/Befehle der Gruppe A}{Text/Befehle der Gruppe B}|

und\DescribeMacro{abc}

|   \abc{Text/Befehle von A}{Text/Befehle von B}{Text/Befehle von C}|

Die Befehle werden verwendet, wenn 2 bzw. 3 alternative
Fragestellungen erzeugt werden sollen. 

Sie dürfen \textit{nicht beide} in einer Aufgabe vorkommen, da dies
zweideutig wäre. Natürlich darf z. B. in der Klammer von
|Text/Befehle von A| und |Text/Befehle von C| dasselbe stehen.

In einem Dokument ist standardmäßig |\gruppec| eingestellt, und es
erscheint \textit{keine} Gruppenangabe im KA-Rahmen.
 
Bei einer Aufgabe ohne die Befehle |\ab{...}| oder |\abc{...}| wird
die Aufgabe immer unmodifiziert ausgegeben.
 
Bei einer Aufgabe mit dem Befehl |\ab{...}| ist keine Gruppe C
vorhanden. Stattdessen wird der Eintrag von Gruppe A benutzt.

  
\DescribeMacro{gruppea} \DescribeMacro{gruppeb}
\DescribeMacro{gruppec} Wird die Gruppenauswahl mit einem der
folgenden Befehle umgestellt werden:

 |    \gruppea|, |\gruppeb| oder |\gruppec|

 so wird bei allen Aufgaben, in denen die Befehle |\ab| - oder |\abc| verwendet 
 wurden, die zu der entsprechenden Gruppe gehörenden Texte eingesetzt.
 
Wird schon im Vorspann einer der Befehle verwendet so ändert sich Der obere/erste Titel zu \glqq Klassenarbeit (A)\grqq

 
Die Befehle |\ab| und |\abc| können prinzipiell auch dazu verwendet
werden um \textit{gänzlich} verschiedene Aufgaben alternativ zu
verwenden. Man sollte jedoch bedenken, dass aufgrund des
unterschiedlichen Platzbedarfs dieser Aufgaben die Klassenarbeiten
unterschiedlich lang ausfallen können und ein unterschiedlicher
Seitenumbruch in Version A,B und C entstehen kann.

\subsubsection{Hinweis}

Werden verschidene Lösungen für A,B,C angegeben, so müssen die Lösungen inerhalb der |\punkte{}| angegeben werden, also so:

|    \punkte{\abc{Berlin}{Paris}{Rom}{1}{Hinweis}}|


\subsection{Projektaufgaben}

\DescribeMacro{projekt} In \textit{einer} Aufgabe kann eine normale
(=nicht projektbezogene), sowie eine projektbezogene Fragestellung
erzeugt werden. Dies geschieht mit dem Befehl:

|    \projekt{projektbezogen}{nicht projektbezogen}|

Standardmäßig wird der Inhalt von |{nicht projektbezogen}| in der
\DescribeMacro{projektbezug} Klassenarbeit erscheinen. Wenn jedoch im
Vorspann der Klassenarbeit der Befehl

|    \projektbezug|

steht, wird anstelle des Inhalts von |{nicht projektbezogen}| der Inhalt von
|{projektbezogen}| eingesetzt.

Dies ermöglicht, schon vorhandene Aufgaben nachträglich mit einer projektbezogenen
Fragestellung zu versehen.

Beispiel:

\begin{verbatim}
   In \projekt{der beschriebenen}{einer} Kälteanlage wird ...
\end{verbatim}

\section{Umfangreiche Dokumente (Prüfungen)}

Bei umfangreichen Dokumenten ist es sinnvoll eine Untergliederung z.B
nach Fächern vorzunehmen.

\DescribeMacro{examfach} Um eine Gliedeungs-Überschrift zu erzeugen dient der Befehl

|    \examfach[Marke]{FachTitel}   |

mit dem in einer Schattenbox der Text |FachTitel| angezeigt wird. Es
wird jedoch keine neue Seite begonnen.

Mit dem optionalen Argument |Marke| wird die Aufgabenmarke gesetzt.
Die Aufgabenmarke ist der Nummer vorangesetzt, z.B. ist bei der
Nummerierung T1, T2, T3, ... T die Aufgabenmarke.

Gleichzeitig wird ein Eintrag ins Inhaltsverzeichnis erstellt. Ein
Inhaltsverzeichnis erzeugt automatisch z.B. das Layout |bszleoexam|
auf der ersten Seite.


\DescribeMacro{ExamType} Um verschiedene Typen von Prüfungen zu erzeugen wird

|    \ExamType{number}   |

verwendet. Beim Layout |bszleoexam| bedeutet z.B. |\ExamType{1}| \glqq
projektunabhängig\grqq{} und |\ExamType{2}| \glqq projektabhängig\grqq.


\section{Erstellen von Arbeitsblättern}


\subsection{Einführung}

Arbeitsblätter sind in ihrem Layout kaum standardisierbar. Deshalb
können hier nur Anregungen gegeben werden.


\subsection{Gliederungsbefehle}

\subsubsection{Mehrere Arbeitsblätter in einer Datei}

Die Dokumentklasse |teacher| greift \textit{nur am Beginn eines
  Dokuments} auf eigene Seitenlayouts zurück. Das mag in Ordnung sein,
wenn z.B. eine 5-seitige Klassenarbeit gedruckt und zusammengetackert
wird.  Hier reicht das einmalige Einlesen des Layouts (Kopf mit
Namensfeld, \ldots) am Dokumentbeginn aus.

Möchte man jedoch aufeinander aufbauende Arbeitsblätter erstellen,
dann ist es oft notwendig, unabhängige Arbeitsblätter in einer Datei
zusammenzufassen. Das Seitenlayout der ersten Seite sollte mehrmals
erscheinen.

\DescribeMacro{newarb} Ein neues Arbeitsblatt kann mit dem Befehl

|   \newarb{Unterer Titel}|

begonnen werden. Dann wird eine neue Seite mit dem Seitenlayout der
ersten Seite begonnen. Mit |Unterer Titel| wird der Befehl
|\Titelu{Unterer Titel}| ausgeführt, der üblicherweise dem neuen
Arbeitsblatt einen neuen Titel gibt. Der obere Titel bleibt durch das
ganze Dokument durchgehend gleich (falls man ihn nicht mit |\Titelo|
ändert).

\subsubsection{Überschriften}

\DescribeMacro{arbsection} \DescribeMacro{arbsubsection}
\DescribeMacro{arbsubsubsection} Die von \LaTeX{} verwendeten
Gliederungsbefehle wie z.B. |\section| sind für Arbeitsblätter zu
raumfordernd. Deshalb stehen für Überschriften die Befehle

|   \arbsection{Titel}        | \newline 
|   \arbsubsection{Titel}     | \newline
|   \arbsubsubsection{Titel}  | \newline

zur Verfügung. Sie besitzen keine Nummerierung.

\subsubsection{Versuche}

\DescribeMacro{versuch} Um Versuche vom restlichen Text abzuheben wird der Befehl

|   \versuch{Titel}|

benutzt. Der |Titel| wird von einem Kästchen umrahmt und mit einer
nummerierten Versuchsnummer versehen, die im Dokument automatisch
durchgezählt wird.

%In einer späteren Version der Scripte von |problectix| kann somit eine
%Versuchsauflistung generiert werden.


Soll der Zähler der Versuche auf einen bestimmten Wert |n| gesetzt werden,
geschieht dies mit:

\begin{verbatim}
   \setcounter{versuch}{n}
\end{verbatim}



%%  \DocInput{teacherpack.dtx}

\subsection{Leerbereiche in die Schüler etwas eintragen sollen}

\subsubsection{Grundlegendes}

Damit ein Schüler handschriftlich ein einzelnes Wort oder
zusammenhängenden Text eintragen kann, muss der Zeilenabstand erhöht
werden. Die geschieht mit dem Befehl |\lue| und gilt bis zum Ende der
laufenden Umgebung oder des laufenden Absatzes (ODER ????). Im
nachfolgenden finden sich Beispiele.

\subsubsection{Lücken innnerhalb von Fließtext}

\DescribeMacro{lll} \DescribeMacro{lllnumbered} Ein Lücke in einem
Text kann mit einem der Befehle

|   \lll[Länge der Linie][Ausrichtung]{Lösung}|
|   \lllnumbered[Länge der Linie][Ausrichtung]{Lösung}|

erzeugt werden. 

Bei |\lllnumbered| werden die Lösungslinien zusätzlich mit den
Buchstaben a, b, c, d, \ldots y, z gekennzeichnet. 


Bei |\lllnumbered| und |\lll| haben die Argumente folgende Bedeutung:

\begin{description}
\item[Lösung] ist der Text, der auf der Linie dargestellt wird, wenn
  eines der Argumente |arblsg|, |examlsg|, |kalsg| oder |kamultilsg|
  in der Dokumentklasse angegeben wird.
\item[Länge der Linie] ist die Länge der Linie, die anstelle der
  Lösung dargestellt wird. Die Länge wird als Zahl ohne Einheit
  angegeben und wird als Millimeter interpretiert.
  
  Wenn keine Länge angegeben wird, dann wird aus der Länge des Wortes
  |Lösung| eine sinnvolle Länge ermittelt (ca. doppelte Wortlänge).

  Es gibt 2 Sonderangaben dieses Arguments

  \begin{description}
  \item[lw] setzt die Länge auf die aktuelle Zeilenbreite
    (\textbf{l}ine\textbf{w}idth). Damit die Linie nicht über das
    Zeilenende rausragt, macht dieser Befehl nur am Anfang einer Zeile
    Sinn.
  \item[v] lässt die Linienlänge \textbf{v}ariabel. Die Linie geht
    dann vom momentanen Punkt im Dokument bis zum Ende der Zeile. Am
    Beginn einer Zeile hat das Argument |v| dieselbe Auswirkung wie |lw|
    benötigt jedoch mehr Rechenleistung.
    
    Innerhalb der |tabbing|-Umgebung kann das Argument |v| nicht
    verwendet werden.
  \end{description}
  
\item[Ausrichtung] gibt an, wie |Lösung| auf der Linie ausgerichtet
  werden soll. Um den Lösungstext zu sehen muss eines der Argumente
  |arblsg|, |examlsg|, |kalsg| oder |kamultilsg| in der Dokumentklasse
  angegeben werden.
  
  Folgende Werte sind anstelle von |Ausrichtung| zulässig:

  \begin{description}
  \item[c] zentriert den Text |Lösung| auf der Linie. Dies ist
    zugleich das Standardargument.
  \item[l] setzt den Text der |Lösung| linksbündig auf die Linie.
  \item[r] setzt den Text der |Lösung| rechtsbündig auf die Linie.
  \item[s] dehnt (to \textbf{s}tretch) den Text |Lösung| so, dass er
    links- \textit{und} rechtsbündig auf der Linie ist. Dieses
    Argument hat bei Linien variabler Länge dieselbe Auswirkung wie
    das Argument c (zentriert).
  \end{description}
\end{description}

\textbf{Zu beachten:} |\lll| und |\lllnumbered| haben \textit{zwei}
optionale Argumente. Wenn nur ein optionales Argument angegeben wird,
dann wird dieses als |Länge interpretiert|. Wenn eine Ausrichtung
angegeben werden soll, dann müssen \textit{beide} optionalen Argumente
angegeben werden. Soll dabei die Länge der Lösungslinie über die Länge
von |Lösung| berechnet werden, ist das Argument leer anzugeben. (z.B.
|\lll[][l]{Lösung}|)


\textbf{Ausgabe der Lösungen als Hilfestellung}

Wenn ein Lückentext viele Lücken enthält, dann kann es sinnvoll sein,
den Schülern alle als |Lösung| angegebenen Wörter in ungeordneter
Reihenfolge als Hilfe zur Verfügung zu stellen.

\DescribeMacro{lllliste} \label{lllliste}Dies kann man für alle Lücken die mit
|\lllnumbered| erzeugt wurden mit folgendem Befehl tun:

|   \lllliste[Sortierung]|

|Sortierung| gibt an, in welcher Reihenfolge die Lösungen angegeben
werden. Wird für die Sortierung eine |0| angegeben, dann werden die
Lösungen in der Reihenfolge ihres Auftretens gelistet. 

Bei |1| (Standardargument) und |2| werden die Lösungen durcheinander
ausgegeben.

Beispiel für einen Lückentext:

|   \lue Es werden \unit{\lll[20]{}}{\gram} Maschinenöl      | \newline
|   von einem Tauchsieder (\unit{300}{\watt}) in \lll[20]{}  | \newline
|   Sekunden von \unit{\lll[20]{}}{\celsius} auf             | \newline
|   \unit{\lll[20]{}}{\celsius} erwärmt.                     | \newline


\subsubsection{Mehrzeilige Lücken mit Lösungen}

Mehrzeilige Lücken erhält man durch mehrfachen Aufruf von |\lll|.

Beispiel:

|  Ein Auto ist ein Ding, das  \lue \lll[v][l]{fährt}      | \newline
|                                                          | \newline
|   \lll[lw][l]{wenn man Benzin hat.}                       | \newline
|                                                          | \newline
|   \ll[lw][l]{}                                           | \newline
|                                                          | \newline


Dies erzeugt den Satz |Ein Auto ist ein Ding, das| mit einer
anschließenden Lösungslinie bis zum Zeilenende. Danach werden nochmals
2 Zeilen erzeugt, die über die ganze Seitenbreite reichen.

Beachten Sie, dass mit |\lue| der Absatz auf einen größeren
Zeilenabstand Umgestellt werden muss.


Wollen sie In jeder Zeile noch eine Beschriftung voranstellen, und
sollen die leeren Zeilen dieselbe Länge haben, so empfiehlt sich die
|tabbing|-Umgebung (Tabulator) und die Verwendung von Linien
konstanter Länge:


|   \lue                                            | \newline
|   \begin{tabbing}                                 | \newline
|      Beobachtung:\hspace{8mm} \= \lll[138]{} \\   | \newline
|                               \> \lll[138]{} \\   | \newline
|                               \> \lll[138]{} \\   | \newline
|                                              \\   | \newline
|      Latente Wärme:           \> \lll[138]{} \\   | \newline
|      Sensible Wärme:          \> \lll[138]{} \\   | \newline
|    \end{tabbing}                                  | \newline


Mit |\lue| wird der Zeilenabstand erhöht. Dann beginnt die |tabbing|-Umgebung.

In der Zeile

|      Beobachtung:\hspace{8mm} \= \lll[138] \\  | \newline

Wird ein Tabstop (|\=|) 8 Millimeter nach dem Ende des Wortes
|Beobachtung| gesetzt. Es folgt eine Linie mit 138 Millimeter Länge
und der Sprung in die nächste Zeile (|\\|).

In den nachfolgenden Zeilen wird mit |\>| zum Tabstopp gesprungen,
wieder eine Lösungslinie mit 138 Millimeter eingefügt und in die
nächste Zeile gesprungen.


\subsubsection{Mehrzeilige Lücken ohne Lösungen}

Sollen keine Lösungen angegeben werden, sondern nur ein Bereich mit
leeren Linien nutzt man den Befehl \DescribeMacro{lln}

\begin{verbatim}
   \lln[n]{Länge in mm}
\end{verbatim}

Er erzeugt mehrere (\texttt{n}) Lösungslinien der Länge
\texttt{Länge}. Standardlänge ist 161\,mm. Es wird eine neue Zeile
begonnen.

??? textwidth?, alle Linien Einrücken?



\subsection{Lücken außerhalb von Lösungslinien}

Sollen Lösungen nicht auf eine Linie geschrieben werden sondern in
eine Tabelle, unter ein Bild, oder an sonstige \DescribeMacro{xlsg}
Stellen im Text, dann benutzt man den Befehl

|   \xlsg{Lösungstext}|

Wird in der Dokumentklasse eines der Argumente |arblsg|, |examlsg|,
|kalsg| oder |kamultilsg| angegeben, dann wird der |Lösungstext| in
grüner Farbe sichtbar. Ansonsten ist er unsichtbar, d.h. er wird in
weisser Farbe ausgegeben. Der unsichtbare Text nimmt dabei exakt
denselben Raum ein wie der sichtbare.


\subsection{Erstellen von Stoffverteilungsplänen}

 \label{stoffbefehle}
 Für Stoffverteilungspläne wird das Argument |stoff| benutzt. Die
 ersten Zeilen eines Stoffverteilungsplanes können also so aussehen:

|   \documentclass[stoff]{teacher}   | \newline
|   \Klasse{M1KB}                    | \newline
|   \Revision{}                      | \newline
|   \Ausdruck{}                      | \newline


\DescribeMacro{titel} Mit dem Befehl |\titel| kann ein Titel erzeugt
werden, der die Klasse enthält.

\DescribeEnv{stoff} Der eigentliche, tabellenförmige
Stoffverteilungsplan beginnt und endet mit der Umgebung |stoff|.

Innerhalb der Umgebung |stoff| sind  folgende Befehle definiert:

\DescribeMacro{thema} Um eine Zwischenüberschrift in der Tabelle
einzufügen nutzen sie den Befehl 

|\thema{Das Thema der nächsten Stunden}|


\DescribeMacro{stunde} Eine einzelne Stunde wird mit
 
|   \stunde{Fach}{Datum}{Zeile 1}{Zeile 2}{Lehrplan}| \newline

in den Stoffverteilungsplan eingetragen. Für die Fächer M, T, AP
werden die Stunden nach Fächern getrennt aufsummiert. 


\DescribeMacro{block} Um das Ende eines Unterrichtsblocks zu
markieren, wird der Befehl |\block| eingetragen. Dabei werden die
Stundenanzahlen in den Fächern T, M und AP ausgegeben.

\DescribeMacro{klassenarbeit} Für eine Klassenarbeit können mit diesem Befehl
gleich 4 Stunden auf einmal angegeben werden, die zur Wiederholung,
Durchführung und Besprechung genutzt werden.

Hier nun ein Beispiel eines Stoffverteilungsplanes mit allen Befehlen:

|   \documentclass[stoff]{teacher}                                    | \newline
|   \Klasse{M1KB}                                                     | \newline
|   \Revision{}                                                       | \newline
|   \Ausdruck{}                                                       | \newline
|   \begin{document}                                                  | \newline
|   \titel                                                            | \newline
|   Hier steht einführender Text                                      | \newline
|   \begin{stoff}                                                     | \newline
|     \thema{Wärmelehre}                                              | \newline
|       \stunde{T}{22.11.04}{Einführung}{Temperatur, ...}{}           | \newline
|       \stunde{M}{27.11.04}{Fortsetzung}{Einheiten und Anwendung}{}  | \newline
|   \klassenarbeit                                                    | \newline
|   \block                                                            | \newline
|     \thema{Wärmeübertragung}                                        | \newline
|       \stunde{T}{29.11.04}{Einführung}{Wärmeleitung}{}              | \newline
|       \stunde{M}{05.12.04}{Grunglagen}{Strahlung}{}                 | \newline
|   \end{stoff}                                                       | \newline
|   \end{document}                                                    | \newline


\part{Allgemeine Tipps}


\section{Grundlegende Dinge}

\subsection{Einheiten}

Einheiten werden mit dem Paket |SIunits| erstellt. Dieses Paket wird
von der Dokumentklasse |teacher| automatisch geleden.

\subsubsection{Einheitenschreibweise}

Einheiten-Erläuterungen werden so dargestellt: 

|$[F] = \newton$|

%ergibt: $[F] = \newton$


\subsubsection{Besondere Einheiten}


Ein Gradzeichen wird mit  |\celsius| oder |/textdegree| verwendet werden.


\subsection{Hilfsbefehle}

\DescribeMacro{frage}
Zeigt die \texttt{Fragestellung} sehr auffallend im umgebenden Text, um den
Text überarbeiten zu können.

\subsection{Schriftart/Sonderzeichen}

\DescribeMacro{entspricht}
Der Befehl |\entspricht| erzeugt ein mathematisches \textbf{entspricht-Symbol} (Zeichen)  

\subsubsection{Aus \LaTeXe{} und anderen Paketen}

\DescribeMacro{textmu} Der Befehl |\textmu| erzeugt ein
Mikrometer-Zeichen (nichtkursives \textmu\ ). Bei Zahlenangaben sollte
jedoch |\unit{200}{\micrometre}| verwendet werden.

\DescribeMacro{textbackslash}  
Der Befehl |\textbackslash| erzeugt einen Backslash

\DescribeMacro{textperthousand}   
Der Befehl |\textperthousand| erzeugt ein Promille-Zeichen passend zum
Prozentzeichen.

\DescribeMacro{textvisiblespace}
Unsichtbare Leerzeichen (hinter einem Befehl) werden erzeugt mit
|\{}|. Sichtbare Leerzeichen mit |\textvisiblespace| 

\DescribeMacro{varnothing} Der Befehl |$\varnothing$| erzeugt einen
Durchmesser/Durchschnitt-Zeichen. Dazu ist das Package |amssymb|
notwendig, das con der Dokumentklasse |teacher| automatisch geladen
wird.

Schöner als Klassendurchnittszeichen ist das Durchgestrichene O:

\begin{tabbing}
\qquad  \= |\O{}| \qquad \= ergibt \qquad \= \O{} \\
        \> |\o{}|        \> ergibt        \> \o{} \\
\end{tabbing}

\DescribeMacro{\EUR}
\DescribeMacro{\EURtm}
\DescribeMacro{\EURhv}
\DescribeMacro{\EURcr}
Die Makros |EUR|, |EURtm|,|EURhv| und |EURcr| erzeugen Euro-Symbole für
normale?? Schrift, Times-Schriften, Helvetica-Schriften bzw. Courier Schriften.

Notwendig dazu ist das Package |marvosym|

\subsection{Für den Lehrer}

??? Flexibler: Text, Länge variabel, links/rechts/mittig 

\DescribeMacro{unterschrift}
Mit dem Befehl |\unterschriftift[Text]| wird ein Leerraum für eine
Unterschrift erzeugt. Unter dem Unterstrich steht
als standardmäßiger Text: \texttt{(Beck) Klassenlehrer im BVJA}. Dies kann mit dem
optionalen  Argument \texttt{Text} verändert werden.

\subsection{Tasten der PC-Tastatur}
Vorraussetzung ist, dass \texttt{\textbackslash usepackage\{fancybox\}} im
Vorspann steht und die Datei \texttt{fancybox.sty} auf dem PC vorhanden ist.

Befehle müsssen erst noch geschrieben werden.



\section{Befehle für Abbildungen}

\subsection{Abbildungen und Text nebeneinander}

\DescribeEnv{linksbild}
Mit der Umgebung

|    \begin{linksbild}[Bildunterschrift]{*.eps-Dateiname}{Bild-Breite in mm}| \newline
|       ... Text  | \newline
|    \end{linksbild}| \newline

können Bilder an den linken Rand mit Text rechts daneben erstellt
werden. Das Bild und ebenso der Text befinden sich jeweils in einer
Minipage. Fussnoten im \texttt{Text} erscheinen direkt unterhalb des
\texttt{Textes}.

Beachten Sie , dass das Bild nicht vom Text umflossen wird.

??? neue Umgebung mit umflossenenem Bild ...

Beide Minipages sind in einer Minipage mit voller Breite (genauer:
\texttt{textwidth}) zusammengefasst. Deshalb werden Sie immer gemeinsam
umbrochen.

Folgende Argumente sind in |linksbild| möglich:

\begin{description}
  \item [\texttt{Bildunterschrift}] gibt den Text an, der unter dem Bild stehen
    soll. Er ist unter dem Bild zentriert. Wenn er länger als die Bildbreite
    ist, wird er umbrochen (zentriert).
    
    Wenn sie die Bilder Nummerieren wollen, dann können sie die
    Bildunterschrift und den Text, der auf dieses Bild verweist so
    wählen:
 
    |Bild \theaufgabennummer .1|
    
    ??? In Zukunft sollen Bilder automatisch in jeder teilaufgabe
    durchnummeriert werden. Dann würde der Text lauten:

    |Bild \theaufgabennummer .\thebildnummer|
    
  \item [\texttt{Bild-Dateiname}] gibt den Namen der |*.eps|-Datei an,
    die eingefügt wird. Die Endung |.eps| ist wegzulassen.
  \item [\texttt{Bild-Breite}] gibt die Breite des Bildes (in mm) auf der Linken
    Seite an. In die restliche \texttt{minipage} rechts daneben wird der
    \texttt{Text} geschrieben, der in der \texttt{linksbild}-Umgebung steht.
\end{description}

Der \texttt{Abstand} zwischen Bild und Text kann mit folgender Längenzuweisung
eingestellt werden:

|    \setlength{\bildtextsep}{Abstand}| 

Standardmäßig wird ein Abstand von 8\,mm benutzt. Dieser Wert kann
\textit{vor} der \texttt{linksbild}-Umgebung verändert werden und
bleibt bis zu nächsten Änderung erhalten.

Die Bilder können tiefergestellt werden mit

|    \setlength{\bildtiefer}{Tieferstellung}| 

Standard für die Tieferstellung ist \texttt{-1.25ex} (Wieso nicht 0???).

\subsection{Abbildungen über die ganze Breite}

\DescribeMacro{includepsfraggraphics} Wenn man \texttt{*.eps}-Dateien
einbindet, in denen Ersetzungen mit \texttt{psfrag} vorkommen, sollte
man diese Ersetzungen \textit{nicht} im Dokument vornehmen, da die
Grafik dann nur umständlich in anderen Dokumenten wiederverwendbar ist.

Besser ist es, zur Datei |grafikname.eps| eine Datei |grafikname.tex|
anzulegen und die Grafik mit |\includepsfraggraphics{grafikname}|
einzubinden. Dieses Vorgehen lädt automatisch die Ersetzungen aus der
Datei |grafikname.tex| vor der Grafik. Die erstellte Grafik kann dann mit
|\includepsfraggraphics{grafikname}| wiederverwendet werden.


\section{Aufzählungen}

Die Umgebungen \texttt{auf} und \texttt{pauf} werden nicht mehr unterstützt.

\DescribeEnv{teilauf}
Erzeugt eine Liste mit den Aufzählungszeichen a), b), \ldots ohne
einzurücken. Das optionale Argument \texttt{n} rückt die Liste um
\texttt{n}\,mm ein.

\DescribeEnv{auf12} Wie zuvor, aber 1., 2., 3. \ldots

\DescribeEnv{exteilaufgabe} 
Aus Kompatibilitätsgründen noch vorhanden
Erzeugt eine Liste mit den Aufzählungszeichen 1), 2), \ldots ohne
einzurücken. Diese Aufzählung ist die Grundlage für Klassenarbeitsaufgaben???
Wurde früher |teilaufgabe| genannt. Es gibt noch einige Dateien, die |teilaufgabe|
enthalten. Beim Umstellen auf die documentclass 'teacher' muss statt der
Umgebung teilaufgabe exteilaufgabe geschrieben werden.

\subsection{Multiple-Choice-Aufzählungen (Ankreuzfragen)}

\DescribeEnv{mch} 
Die Umgebung |mch[x]| erzeugt eine Aufzählung mit dem Ankreuzkästchen
\fbox{\raisebox{0ex}[1.8ex]{\rule{1.8ex}{0ex}}} als Aufzählungszeichen. Das
Zusatzargument {\it x} rückt die Liste um {\it x}\,mm ein.

Die Ankreuzmöglichkeiten werden mit |\item| realisiert. Bei korrekten
Antworten sollte |\itemx| angegeben werden, damit wird das Kästchen
angekreuzt, wenn eines der Argumente |arblsg|, |examlsg|, |kalsg| oder
|kamultilsg| verwendet wird.


Wird |mch| in die Umgebung |multicols{n}| geschachtelt, wird die
Multiple-ChoiceAufzählung auf |n| Spalten verteilt. Dazu wird von
|teacher.cls| das Package |multicol| dazugeladen.

Die Verschachtelungsreihenfolge für mehrspaltige Multiple-Choice-Aufzählungen 
ist:

%|    \begin{teilaufgabe}                                        | \newline
%|       \item ... Überschrift zu 1) ...                         | \newline
|         %% Beginn der mehrspaltigen Multiple-choice-Aufgabe   | \newline
|         \begin{multicols}{n} %% Falls mehr als eine Spalte ...| \newline
|            \begin{mch}[x]                                     | \newline
|               \item  ... Ankreuzmöglichkeit 1 ...             | \newline
|               \item  ... Ankreuzmöglichkeit 2 ...             | \newline
|               \itemx ... Ankreuzmöglichkeit 3 (korrekt) ...   | \newline
|               \item  ... Ankreuzmöglichkeit 4 ...             | \newline
|               ...                                             | \newline
|            \end{mch}                                          | \newline
|         \end{multicols}                                       | \newline
|         %% Ende der mehrspaltigen Multiple-choice-Aufgabe     | \newline 
%|       \item ... Überschrift zu 2) ...                         | \newline
%|       ...                                                     | \newline
%|    \end{teilaufgabe}                                          | \newline





\section{Befehle für das Fach Deutsch}

\DescribeMacro{\wort}
Der Befehl

|\wort[Abstand]{Zu erklärendes Wort}{Beispiel}{Erklärung/Übersetzung}|

erzeugt Worterklärungen in unterschidlicher Formatierung. Geeignet um Begriffe oder
Fremdwörter zu erläutern. Nach jeder Erklärung sollte in eine neue Zeile
gesprungen werden, da ein vergrößerter Zeilenabstand eingefügt wird. 

Mit dem
Zusatzargument \texttt{Abstand} wird der Abstand vor und nach der
Worterklärung beeinflusst. Wird bei jedem Befehl derselbe Abstand angegeben,
so erfolgt ein normaler Zeilenumruch mit dem zuätzlichen Abstand
\texttt{Abstand}. Ist der Abstand 0mm, fügt sich die Erklärung problemlos in
Fließtext ein.

\DescribeMacro{konjugation} 
Der Befehl |\konjugation{Verb}{in der  Zeitform}| erzeugt eine 
auszufüllende Konjugationstabelle.

Die Argumente bedeuten:
\begin{description}
    \item [|Verb|] ist das zu konjugierende Verb. Es wird
    unterstrichen dargestellt.
    \item [|in der Zeitform|] ist die Fortsetzung des Satzes: Konjugieren Sie das
    \texttt{Verb} \ldots
 \end{description}

\DescribeMacro{bspsatz}
Der Befehl |\bspsatz[Bilden Sie Sätze!]{Bspsatz}{Lösung}| erzeugt einen 
umrahmten Kasten, mit Aufgabenstellung, Aufgabe und Lösung.

Die Argumente bedeuten:

\begin{description}
    \item [|Bilden Sie Sätze!|] ist die Standardmäßige
    Aufgabenstellung. Sie kann im optionalen Argument verändert werden.
    \item [|Bspsatz|] gibt die Beispiel-Aufgabe vor.
    \item [|Lösung|] gibt die Musterlösung vor. Sie erscheint auf 
    der Lösunglinie.
 \end{description}

\DescribeMacro{bspzweisatz}
Der Befehl 

|    \bspzweisatz[Bilden Sie Sätze!]%| \newline
|                {Bspsatz}{Info 1:}{Lsg 1}{Info 2:}{Lsg 2}|

erzeugt einen  umramten Kasten, mit Aufgabenstellung, 2 Aufgaben 
und 2 Lösungen.

Die Argumente bedeuten:
 \begin{description}
    \item [|Bilden Sie Sätze!|] ist die Standardmäßige
    Aufgabenstellung. Sie kann im optionalen Argument verändert werden.
    \item [|Info 1,2|] machen weitere Angabenvor der Musterlösung.
    \item [|Lsg 1,2|] geben die Beispiel-Lösungen vor. Sie erscheinen auf 
    den Lösunglinien
 \end{description}






%%==============================================================================





\section{Zählerdateien}
Der Inhalt der Zähler-Dateien soll am Beispiel von
\texttt{ka-format.tex} erläutert werden.  Diese Datei wird eingelesen,
wenn das Argument \texttt{[ka]} in der Dokumentklasse \texttt{teacher}
angegeben wird.

Die Datei \texttt{ka-format.tex} beinhaltet folgende Zähler: 

  \DocInput{../inputfiles/ka-format.tex}


\part{DIN A 5 Blätter}



Wenn man nur ein kleineres Arbeitsblatt oder einen Test erstellen will
ist oft DIN A 5 ausreichend. Da aber alle Drucker bzw. Kopierer
üblicherweise mit DIN A 4 Blättern arbeiten hat man einige Probleme,
die einen sehr schnell wieder Abstand nehmen lassen vom erstellen von
DIN A5 Blättern.

\texttt{problectix} löst diese Probleme mit 


 



\part{Die PERL-Scripte von \texttt{problectix}}

\section{Einführung in PERL-Scripte}

Diese Scripte helfen die erstellten Aufgaben zu verwalten.

\subsection{\texttt{problectix-test}}

Mit \verb|problectix-test| können die Funktionen von \verb|problectix|
getestet werden. Dazu wird im Homeverzeichnis des users ein
Verzeichnis \verb|problectix-test| erzeugt, in das Beispieldateien
kopiert werden.

Diese Beispieldateien werden mit \verb|latex|, \verb|dvips| bzw.
\verb|pdflatex| bearbeitet.

Schließlich können sie mit einem Dateibetrachter visuell geprüft werden. 

Alle aktuellen Optionen von \verb|problectix-test| können sie mit

\verb|   problectix-test --help|

anzeigen lassen. 

\part{Erstellen von Vektorgrafiken}

\section{Technische Zeichnungen mit \texttt{qcad}}

Zum Einbinden von technischen Zeichenungen ist das Programm
\texttt{qcad} ab Version 2.0 geeignet.

Gehen Sie folgendermaßen vor:

\begin{enumerate}
\item Erstellen sie die Qcad-Zeichnung. Speichern Sie die Datei im dxf-Format ab.
\item Gehen Sie in Qcad auf die Druckvorschau. Wählen sie evtl. den
  Knopf für Schwarz-Weiss-Darstellung aus, falls sie die Zeichnung in
  Schwarz-Weiss einbinden wollen.
\item Drucken Sie dann die Vorschau in eine Datei. 

  Da hier PostScript erstellt wird, sollten sie dieser Datei die
  Endung \texttt{*.ps} geben. Diese Datei ist ein
  \textit{ganzseitiges} PostScript-Dokument. Sie können es sich zum
  Beispiel mit

\verb|   kghostview datei.ps|

  anschauen.
\item Um nur die Zeichnung (ohne weissen Rand) in eine Datei zu
  einzufügen, muss diese PostScript-Datei in \textit{Encapsulated
    PostScript} umgewandelt werden. \textit{Encapsulated PostScript}
  besitzt eine sogenannte BoundingBox, die angibt welcher Ausschnitt
  der ganzseitigen PostScript-Datei genutzt werden soll.

Die Umwandlung geschieht mit dem Befehl (Man Lese: ps-to-epsi):

\verb|   ps2epsi datei.ps|

Dabei entsteht eine Datei \texttt{datei.epsi} die das Format von
\textit{Encapsulated PostScript} hat. Diese Datei können sie sich zum
Beispiel mit \texttt{kghostview Dateiname} anschauen. Beachten Sie,
dass der Rand automatisch beschnitten wurde.

Falls sie mit der Beschneidung nicht einverstanden sind, können sie in
der Datei \texttt{datei.epsi} die BoundingBox mit einem Texteditor
anpassen.

\item Fügen sie die \textit{Encapsulated PostScript}-Datei in ihr
  \LaTeX-Dokument ein mit dem Befehl:

\verb|  \includegraphics{datei.epsi} |


\end{enumerate}

Option bw bzw. sw nutzen, wenn Schwarzweiss und Farbige Vektorgrafiken existieren???


\PrintIndex

\end{document}
