\documentclass{ltxdoc}
\usepackage{ifthen}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{textcomp}
\usepackage{afterpage}
\usepackage{calc}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{ngerman}
\usepackage{fancybox} 
\usepackage{marvosym}
\usepackage[dvips]{color} 
\usepackage{fancyhdr}
\usepackage{moreverb}
\usepackage{twoopt}
\usepackage{rotating}
\usepackage{array}
\usepackage{cclicenses}
\usepackage[cdot,amssymb,thickqspace]{SIunits}
%\usepackage{teacherpack}
%%\usepackage{kapack}
\setlength{\parindent}{0mm}
\setlength{\parskip}{3mm}
\OnlyDescription
\begin{document}
%%\title{problectx}
%%\author{jeff}

\newpage

%%\begin{titlepage}

%%\end{titlepage}


\title{\textbf{\LaTeX{} für Lehrer} 
\linebreak
\linebreak
Aufgabensammlungen unter Unix/Linux \linebreak
und andere Hilfsmittel für Lehrer
\linebreak 
\linebreak \textbf{Prob}lem Col\textbf{lect}ion on Un\textbf{ix}
\linebreak (\texttt{problectix})
}

\author{Rüdiger Beck}
\maketitle
\newpage


\tableofcontents

%\listoftables

\newpage

\part{Die Distribution --- \texttt{problectix}}

\section{Grundlagen von \texttt{problectix}}

\subsection{Was ist \texttt{problectix}?}

|problectix| ist eine Sammlung von Werkzeugen (\LaTeX-Dokumentklassen,
Perl-Scripte, ...) mit denen man als Lehrer mit \LaTeX{} besonders
effektiv arbeiten kann.

--- Ab hier muss der Text woanders hin ---

Jede Aufgabe wird incl. Lösung in einer Datei abgelegt. Alle diese
Dateien zusammen bilden die Aufgabensammlung. Soll nun eine
Klassenarbeit oder ein Aufgabenblatt erstellt werden, so wird eine
Klassenarbeitsdatei bzw. eine Aufgabenblattdatei erstellt, und die
gewünschten Aufgaben per Einfügebefehl, der den Dateinamen
enthält, eingebunden.

Um den Einfügebefehl der Aufgabe einfach zu ermitteln, können mit einem
PERL-script alle Aufgaben-Dateien unterhalb eines Verzeichnisbaums
incl. Lösungen in eine html-Seite umgewandelt werden. Dabei liegt die
Aufgabe als \texttt{*.png}-Bild vor, sowie als Über-/Unterschrift der
Einfügebefehl in markierbarer Textform. Der Einfügebefehl kann nun
einfach in einen Editor kopiert werden, mit dem die Klassenarbeitsdatei
bzw. die Aufgabenblattdatei erstellt wird.

In Zukunft:

Per Script kann eine Aufgabensammung aller Aufgaben erstellt werden
(für die Schüler). Da diese Aufgabensammlung ebenfalls in Bild/HTML
vorliegt, kann sie per Webserver durchsuchbar gemacht werden.

Da die Erstellten Aufgaben in \LaTeX-Code vorliegen, können Sie in
eine Versions-Verwaltungs-Software gestellt werden, damit
Korrekturen Zentral gesammelt werden können und auch mehrere Personen
zugreifen können. Der Zugriff auf den Server kann aus der ganzen
Welt erfolgen.

Versionsinformationen von CVS (aber auch git) können können im Dokument ausgegeben werden.

\subsection{Die Bestandteile von \texttt{problectix}}

|problectix| besteht aus den folgenden Bestandteilen:

\begin{enumerate}
\item \LaTeX-Dateien
   \begin{itemize}
   \item |teacher.cls| : Die Dokumentklasse |teacher| zum Erstellen
     von Arbeitsblättern, Klassenarbeiten, Prüfungen, Aufgabensammlungen und
     Stoffverteilungsplänen.
   \item |kapack.sty| : Eine Sammlung von \LaTeX-Befehlen für die
     Erstellung von Aufgaben, Aufgabensammlungen.
  
     |kapack.sty| wird von |teacher.cls| automatisch geladen.
  
     |kapack.sty| ist nur Funktionsfähig, wenn die Dokumentklasse
     |teacher| benutzt wird.

   \item |teacherpack.sty| : Eine Sammlung von nützlichen
     \LaTeX-Befehlen für immer wieder vorkommende Aufgaben eines
     Lehrers.
  
     |teacherpack.sty| wird von |teacher.cls| automatisch geladen.

     |kapack.sty| kann auch mit anderen Dokumentklassen zusammen benutzt werden.

   \end{itemize}
\item \LaTeX-Dateien (Experimentell)
   \begin{itemize}
   \item |bb.cls| : Die Dokumentklasse |bb|
     (\textbf{b}lack\textbf{b}oard) ist dazu da ein Tafelbild zu
     erstellen.
   \item |folie.cls| : Eine
     Dokumentklasse zum Erstellen von *.pdf-Folien.
   \end{itemize}
\item Perl-Scripten
   \begin{itemize}
   \item |jefflatex| : ein Script zum erzeugen von *.ps bzw. *.pdf aus
     *.tex-Dateien. Dieses Script kann aus |emacs| heraus aufgerufen
     werden, und erzeugt auch aus separaten Aufgaben (ohne
     |\begin{document}|, ...) eine *ps-Datei.
     \item |problectix| : Ein Script zum erzeugen von Voransichten von
       Aufgaben und Aufgabensammlungen die mit |teacher.cls| erstellt wurden.
     \item |einmaleins| : Ein Script zum Erzeugen von
       Einmaleins-Aufgaben in \LaTeX-Code.
   \end{itemize}
\end{enumerate}





\subsection{Installation von \texttt{problectix}}

Um \texttt{problectix} unter Ubuntu Trusty LTS zu installieren, gehen
sie wie folgt vor:


\begin{enumerate}
\item Tragen Sie die Paketquelle |trusty-testing| von linuxmuster.net ein (Siehe |http://www.linuxmuster.net/wiki/dokumentation:handbuch:maintenance:repos|).

\item |apt-get update|

\item |apt-get install problectix-teacher-texlive|

\item Installieren sie evtl. noch weitere Pakete.

\item Testen sie die Installation als nomaler |user| mit dem Befehl.

|   user@host:~ # problectix-test|

Es entsheht ein Verzeichnis |/home/user/problectix-test|, das
Beispieldateien in *.pdf und *.ps enthält.

Der Test kopiert Beispiele (*.tex) nach |/home/user/problectix-test|
und fährt die Schritte |latex|, |dvips| bzw. |pdflatex| durch.


Er dauert je nach Rechenleistung einige Minuten!

Die erzeugten \texttt{*.ps} und \texttt{*.pdf}-Dateien dienen zur
visuellen Kontrolle der korrekten Funktion von \verb|problectix|.


\end{enumerate}



\subsection{Konfiguration von \texttt{problectix}  (Unix/Linux)}

\subsubsection{Suchpfad für eigne Aufgaben angeben}

Wenn in einem \LaTeX-Dokument ein |\input{dateiname}|-Befehl auftritt
(oder andere Befehle, die auf den Inhalt einer anderen Datei
verweisen), dann entscheidet die Umgebungsvariable |TEXINPUTS| in
welchen Pfaden nach der Datei \verb|dateiname| gesucht wird.

Den Inhalt der Umgebungsvariablen |TEXINPUTS| kann man sich
anzeigen lassen mit:

\begin{verbatim}
   echo $TEXINPUTS
\end{verbatim}

Für die Verwendung von |problectix| ist es sinnvoll, ein Verzeichnis
einzurichten, in dem sich \textit{alle} Aufgaben und sonstiges
Material befindet, dass mit |input| oder ähnlichen Befehlen
eingebunden werden kann.  üblicherweise wird dieses Verzeichnis
|mytex| genannt. Da dieses Verzeichnis sinnvollerweise mit einer
Versionsverwaltung verwaltet werden sollte (z.B. |git| oder |gitolite|) ist es
anzuraten |mytex| in das Verzeichnis zu speichern, in dem alle unter
|git|-Kontrolle stehenden Projekte gespeichert sind: z.B. |gitolite/mytex|.


Zusätzlich ist es sinnvoll das Verzeichnis |.problectix|
einzuschließen, in dem |problectix| benutzerabhängige Einstellungen
speichert.

Falls sie Systembetreuer an dem Rechner sind (|root|-Rechte), an dem
sie arbeiten, können sie (bei Debian-GNU/Linux) folgendes in
|/etc/environement| eintragen.

\begin{verbatim}
   TEXINPUTS="$HOME/Home_auf_Server/gitolite/mytex//::$HOME/.problectix::./figures"
\end{verbatim}

Die Umgebungsvariable |TEXINPUTS| wird dann für \textit{alle} Benutzer gesetzt.
  
Wenn sie keine |root|-Rechte haben, dann können sie die Datei
|.bashrc| in ihrem Homeverzeichnis anpassen, sodass sie z.B. folgende
Zeile enthält:

\begin{verbatim}
   export TEXINPUTS="$HOME/gitolite/mytex//::$HOME/.problectix::./figures"
\end{verbatim}

Die Umgebungsvariable |TEXINPUTS| wird dann nur für sie gesetzt.


\subsubsection{Konfiguration von \texttt{emacs}}

Wenn sie Emacs benutzen, installieren Sie das Paket
|problectix-emacs-texlive|. Damit compilieren Sie ihre Texdateien mit:

\begin{itemize}
\item \texttt{F5} zum Erstellen von PostScript (\texttt{jefflatex
    --file <Datei>} mit dem zugrundeliegenden \texttt{latex}-Befehl)
\item \texttt{<shift>+F5} zum erstellen von PDF's (\texttt{jefflatex
    --pdf --file <Datei>} und dem zugrundeliegenden
  \texttt{pdflatex}-Befehl).
\end{itemize}

Folien können nur mit \texttt{pdflatex} erstellt werden.

Die Funktionstasten werden nur im |latex-mode| für den Aufruf von |jefflatex| 
benutzt. In anderen Modi können sie somit für andere Aufgaben benutzt werden



\subsubsection{Konfiguration eines anderen Editors}

Richten Sie ihren Editor so ein, dass mit dem Befehl:

|   jefflatex --file <Datei>|

und mit:

|   jefflatex --pdf --file <Datei>|

die im Editor gede angezeigte Datei compiliert werden kann.


\newpage

\part{Die Dokumentklasse \texttt{teacher.cls}}
%\author{Rüdiger Beck}
%\maketitle

\section{Einführung in die Dokumentklasse \texttt{teacher}}

Die Dokumentklasse |teacher.cls| dient dazu, Arbeitsblätter,
Klassenarbeiten, Prüfungen, Aufgabensammlungen, Stoffverteilungspläne
... zu erstellen.  Also alles, was ein Lehrer so an Dokumenten
erstellen muss. Die Dokumentklasse wird aufgerufen mit:

\begin{verbatim}
   \documentclass{teacher}
\end{verbatim}

Eine Aufgabe, wird mit den Befehlen dieser Dokumentklasse formatiert
und in einer separaten Datei abgespeichert. Dann kann die Aufgabe zum
Einen in Aufgabenblättern und dazugehörigen Lösungsblättern verwendet
werden. Zum Anderen kann sie in Klassenarbeiten und Prüfungen
verwendet werden oder in eine umfassende Aufgabensammlung eingebunden
werden.

Für die Erstellung typischer Aufgaben sind \LaTeX - Befehle vorhanden,
die eine einfache Formatierung der Aufgaben ermöglichen, sowie das
Zusammenzählen von Punkten, Ein- und Ausblenden der Lösungen, usw.
ermöglichen.

\section{Die Argumente der Dokumentklasse \texttt{teacher}}

\subsection{Argumente zur Festlegung des Dokumenttyps}

Von zentraler Bedeutung sind die Argumente, die es erlauben je nach
Dokumenttyp (Klassenarbeit, Prüfung, Arbeitsblatt, ..) Teile der
Aufgaben zu verbergen.

Wenn keine dieser Argumente angegeben werden, so wird möglichst
\textit{alles} angezeigt.

Folgende Teile einer Aufgabe sind einblend- bzw. ausblendbar:

\begin{description}
\item [Datei-/Versionsinfo]
  Dateiname (ohne \texttt{.tex}-Erweiterung) sowie cvs-Versions\-nummer (bzw git-Datumsangabe)
   \item [Aufgabenstellung] Die Aufgabe.
   \item [Lösungsbereiche]  Lösungslinien bzw. Lösungskaros, in die die
     Schüler ihre Lösungen eintragen können.
   \item [Korrekturhilfen] Punktzahlkasten zum eintragen der Punkte mit Fachangabe
   \item [Gruppeninfo] Gruppenversion (A,B oder C) der Aufgabe an.
   \item [Projektinfo] Information ob Projektversion oder die
     Nicht-Projektversion angezeigt wird.
   \item [Lösung auf Linien] Lösung auf dem Lösungsbereich anzeigen.
   \item[Lösung (alleine)] Nur die Lösung anzeigen. Die
     Aufgabenstellung wird nicht gezeigt.
   \item[Aufgaben-Fußzeile] Zustzinformationen nach der Aufgabe
     zeigen: Existierende Gruppenversionen, Gesamtpunktzahl.
\end{description}

Am Ende eines Dokuments können folgende Informationen gezeigt werden:


\begin{description}
   \item [Notenliste] Eine Liste mit Punkten und entsprechenden Noten. 
   \item [Notenkasten] Ein Bereich am Ende eines Dokuments, in dem Die
     erreichte Punktzahl und Note eingetragen wird.
\end{description}



Hier die Dokumenttyp-Argumente im Überblick:

\newcommand{\headrotate}[1]{\makebox[3mm][c]{\begin{rotate}{60}#1\end{rotate}}}

\begin{table}
  \caption{\label{documenttype-arg} 
   Dokumenttyp-Argumente der Dokumentklasse \texttt{teacher}}
\begin{tabular}{|l|*9{c}*4{c}|} \hline
\rule{0mm}{29mm}& 
\headrotate{Datei-/Versionsinfo}&
\headrotate{Aufgabenstellung}&
\headrotate{Lösungsbereiche}&
\headrotate{Korrekturhilfen}&
\headrotate{Gruppeninfo}&
\headrotate{Projektinfo}&
\headrotate{Lösung auf Linien}&
\headrotate{Lösung (alleine)}&
\headrotate{Aufgaben-Fußzeile}&
\makebox[0mm][c]{\begin{rotate}{60}\tiny\rule{32mm}{0.1mm}\end{rotate}}&
\headrotate{Notenliste}&
\headrotate{Notenkasten}&
\rule{3mm}{0mm}
\tabularnewline \hline\hline

\rule{0mm}{4mm}\bf ohne Argumente &&&&&&&&&&&&& \tabularnewline
\texttt{[]}& x & x & x & x & x & x & x & & x &&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf nur Aufgaben &&&&&&&&&&&&& \tabularnewline
\texttt{col}    && x &&&&&&&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf nur Lösungen &&&&&&&&&&&&& \tabularnewline
\texttt{lsg}    & x &&&& x & x & x & x &&&&& \tabularnewline 
\texttt{slsg}   &   &&&&&&x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Arbeitsblätter &&&&&&&&&&&&& \tabularnewline 
\texttt{arb}    & & x & x &&&&&&&&&& \tabularnewline 
\texttt{arblsg} & x & x & x &&&& x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Prüfungen&&&&&&&&&&&&& \tabularnewline 
\texttt{exam}   & & x & x &&&&&&&&&& \tabularnewline 
\texttt{examlsg}& x & x & x &&&& x &&&&&& \tabularnewline \hline
\rule{0mm}{4mm}\bf Klassenarbeiten &&&&&&&&&&&&& \tabularnewline
\texttt{ka}     & & x & x & x &&&&&&& x & x & \tabularnewline 
\texttt{kalsg}  & x & x & x & x &&& x &&&& x & x & \tabularnewline 
\texttt{kamulti} && x & x & x &&&&&&& x & x & \tabularnewline 
\texttt{kamultilsg} & x & x & x & x &&& x &&&& x & x & \tabularnewline \hline
\end{tabular}
\end{table}

\subsubsection{Erläuterung der Argumente des Dokumenttyps}

Von den folgenden Argumenten (siehe Tabelle \ref{documenttype-arg},
Seite \pageref{documenttype-arg}) ist \textit{nur eines} zu wählen, da
sie sich gegenseitig ausschließen.

\DescribeMacro{[]} Ohne Argumente werden möglichst alle Teile der
Aufgabe angezeigt.

\DescribeMacro{col} Mit dem Argument |col| wird eine Aufgabensammlung
(Collection) ausgegeben, in der nur die Aufgaben sichtbar sind.

\DescribeMacro{lsg} Mit dem Argument |lsg| werden nur die Lösungen
angezeigt. Somit kann ein Lösungsblatt erstellt werden. Da Dateinamen,
Gruppeninformationen ebenfalls angezeigt werden, ist dieses
Lösungblatt für Lehrer passend.

\DescribeMacro{slsg} Mit der Argument |slsg| (Schüler-Lösungen) werden
nur die Lösungen angezeigt. Auf dem Lösungsblatt sind alle für Schüler
wichtigen Informationen vorhanden.

\DescribeMacro{arb} Sollen keine Korrekturinformationen angezeigt
werden,wird das Argument |arb| verwendet (Arbeitsblatt). Lösungslinien
und Lösungskaros werden jedoch angezeigt.

\DescribeMacro{arblsg} wie |arb| jedoch mit Lösungen auf den Linien.
So kann man ein ausgefülltes Arbeitsblatt erstellen. Dazu müssen bei
der Lösungsangabe allerdings bestimmte Anforderungen erfüllt werden
(siehe Seite \pageref{loesungen}\pageref{arblsg}).

\DescribeMacro{exam} Für Prüfungen. Bislang identisch mit dem
Argument |arb|.

\DescribeMacro{examlsg} Bislang identisch mit dem Argument |arblsg|.


\DescribeMacro{ka} Mit dem Argument |ka| werden die Aufgaben so
formatiert, dass sie in Klassenarbeiten verwendet werden können. Es
werden Lösungslinien erzeugt, erreichbare Punktzahlen angegeben und
ein Punktzahlkasten erzeugt, in dem der korrigierende Lehrer die
erreichte Punktzahl von Hand eintragen kann.

Am Ende Der Klassenarbeit wird ein Bereich ausgedruckt, in dem die
Punkte zusammengezählt werden und die Noten angegeben werden können.

\DescribeMacro{kalsg} wie |ka| jedoch mit Lösungen auf den Linien. 

\DescribeMacro{kamulti}\label{kamulti}Ebenfalls für Klassenarbeiten
ist die Argument |kamulti| geeignet. Die Punkte werden getrennt nach
Fächern aufsummiert. Somit können in \textit{einer} Klassenarbeit
Noten für \textit{mehrere Fächer} vergeben werden. Um die Schüler zu
informieren zu welchem Fach welche Teilaufgabe zählt, werden neben dem
Punktzahlkasten ein Kürzel für das Fach angegeben (z.B. \textbf{M} für
Mathe)

\DescribeMacro{kamultilsg} wie |kamulti| jedoch mit Lösungen auf den Linien. 


\end{document}
